definition {

	macro addCategoryLogLevels {
		Navigator.gotoNavItem(navItem = "Log Levels");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "ServerAdministrationLogLevels#ADD_CATEGORY_NAME_FIELD",
			value1 = "${categoryName}");

		Select(
			locator1 = "ServerAdministrationLogLevels#ADD_CATEGORY_PRIORITY_SELECT",
			value1 = "${categoryPriority}");

		PortletEntry.save();
	}

	macro configureFileUploadOverallMaximumFileSize {
		Type(
			locator1 = "ServerAdministrationFileUploads#GENERAL_OVERALL_MAX_FILE_SIZE_FIELD",
			value1 = "${maxFileSize}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");
	}

	macro configureMailServerSettings {
		Navigator.gotoNavItem(navItem = "Mail");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_POP_SERVER",
			value1 = "pop.gmail.com");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PORT",
			value1 = "995");

		Check(locator1 = "ServerAdministrationMail#INCOMING_SECURE_NETWORK_CONNECTION_CHECKBOX");

		if ("${needsReply}" == "true") {
			Type(
				locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
				value1 = "recent:${userName}");
		}
		else {
			Type(
				locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
				value1 = "${userName}");
		}

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PASSWORD",
			value1 = "${userPassword}");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_SMTP_SERVER",
			value1 = "smtp.gmail.com");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_PORT",
			value1 = "465");

		Check(locator1 = "ServerAdministrationMail#OUTGOING_SECURE_CONNECTION_CHECKBOX");

		if ("${needsReply}" == "true") {
			Type(
				locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME",
				value1 = "recent:${userName}");
		}
		else {
			Type(
				locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME",
				value1 = "${userName}");
		}

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_PASSWORD",
			value1 = "${userPassword}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");
	}

	macro executeScript {
		Navigator.gotoNavItem(navItem = "Script");

		Select(
			locator1 = "ServerAdministrationScript#LANGUAGE_SELECT",
			value1 = "${language}");

		if ("${htmlOutput}" == "true") {
			Select(
				key_selectFieldLabel = "Output",
				locator1 = "Select#ANY",
				value1 = "HTML");
		}

		Type(
			locator1 = "ServerAdministrationScript#SCRIPT_TEXT",
			value1 = "${script}");

		AssertClick(
			locator1 = "ServerAdministrationScript#EXECUTE_BUTTON",
			value1 = "Execute");

		Alert.viewSuccessMessage();
	}

	macro executeServerResourcesActions {
		Navigator.gotoNavItem(navItem = "Resources");

		Panel.expandPanel(panel = "Clean Up Actions");

		var key_actionsDescription = "${actionsDescription}";

		AssertTextEquals.assertPartialText(
			locator1 = "ServerAdministrationResources#ACTIONS_TABLE_DESCRIPTION",
			value1 = "${actionsDescription}");

		AssertClick(
			locator1 = "ServerAdministrationResources#ACTIONS_TABLE_EXECUTE",
			value1 = "Execute");

		Alert.viewSuccessMessage();
	}

	macro openServerAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_server_admin_web_portlet_ServerAdminPortlet");
	}

	macro tearDownDMFileUploadSettings {
		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "Server Administration");

		Navigator.gotoNavItem(navItem = "File Uploads");

		Type(
			locator1 = "ServerAdministrationFileUploads#DOCS_AND_MEDIA_MAX_FILE_SIZE_FIELD",
			value1 = "");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");
	}

	macro tearDownMailServerSettings {
		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "Server Administration");

		Navigator.gotoNavItem(navItem = "Mail");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_POP_SERVER",
			value1 = "localhost");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PORT",
			value1 = "110");

		Uncheck(locator1 = "ServerAdministrationMail#INCOMING_SECURE_NETWORK_CONNECTION_CHECKBOX");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
			value1 = "weblogic");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PASSWORD",
			value1 = "password");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_SMTP_SERVER",
			value1 = "localhost");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_PORT",
			value1 = "25");

		Uncheck(locator1 = "ServerAdministrationMail#OUTGOING_SECURE_CONNECTION_CHECKBOX");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME",
			value1 = "");

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_PASSWORD",
			value1 = "");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");
	}

	macro viewForbiddenErrorMessageAlert {
		AssertTextEquals(
			locator1 = "Home#ERROR_MESSAGE_ALERT_ERROR",
			value1 = "Forbidden");
	}

	macro viewJSONWSSecurityEmptyPage {
		AssertElementPresent(locator1 = "JSONWS#SECURITY_EMPTY_PAGE");
	}

	macro viewOutputField {
		AssertTextEquals.assertPartialText(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "${valueName}");
	}

	macro viewProperties {
		Navigator.gotoNavItem(navItem = "Properties");

		var key_propertyName = "${propertyName}";
		var key_propertyTitle = "${propertyTitle}";

		AssertClick(
			locator1 = "ServerAdministrationProperties#PORTAL_SYSTEM_PROPERTY_TITLE",
			value1 = "${propertyTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "ServerAdministrationProperties#PORTAL_SYSTEM_PROPERTY_NAME",
			value1 = "${propertyName}");
	}

}