definition {

	@summary = "Helper function to get the 'DM folderId' for the folder '${folderName}'"
	macro _getFolderIdByFolderName {
		Variables.assertDefined(parameterList = "${groupName},${name}");

		var portalURL = JSONCompany.getPortalURL();

		var repositoryId = JSONGroupAPI._getSiteIdByGroupKey(groupName = "${groupName}");

		if (!(isSet(parentFolderId))) {
			var parentFolderId = "0";
		}

		var curl = '''
			${portalURL}/api/jsonws/dlapp/get-folder \
				-u test@liferay.com:test \
				-d repositoryId=${repositoryId} \
				-d parentFolderId=${parentFolderId} \
				-d name=${name}
		''';
		var folderId = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${name}')]['folderId']");

		if ("${folderId}" == "") {
			fail("FAIL. Cannot find folder.");
		}
		else {
			return "${folderId}";
		}
	}

	@summary = "Helper function to get the 'DM typeId' for the document type '${documentTypeName}'"
	macro _getTypeIdByTypeName {
		Variables.assertDefined(parameterList = "${groupName},${documentTypeName}");

		if (!(isSet(site))) {
			var site = "true";
		}

		var portalURL = JSONCompany.getPortalURL();

		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = "${groupName}",
			site = "${site}");

		var curl = '''
			${portalURL}/api/jsonws/dlfileentrytype/get-file-entry-types \
				-u test@liferay.com:test \
				-d groupIds=${groupId}
		''';
		var typeId = JSONCurlUtil.post("${curl}", "$.[?(@['nameCurrentValue'] == '${documentTypeName}')]['fileEntryTypeId']");

		if ("${typeId}" == "") {
			fail("FAIL. Cannot find type.");
		}
		else {
			return "${typeId}";
		}
	}

}