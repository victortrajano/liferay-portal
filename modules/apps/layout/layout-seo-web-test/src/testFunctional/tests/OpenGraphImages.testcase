@component-name = "portal-collaboration"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.ssl.enabled = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This makes sure that the user can edit OG image tag."
	@priority = "5"
	@refactordone
	test CanChangeImageTag {
		var portalURL = PropsUtil.get("portal.url");

		var siteId = JSONGroupSetter.setGroupId(groupName = "Test Site Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		OpenGraph.clearImage();

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_2.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:image" content="${portalURL}/documents/${siteId}/0/Document_2.jpg''');
	}

	@description = "This makes sure that the user can change the default image for OpenGraph at the site level."
	@priority = "5"
	@refactordone
	test CanChangeSiteImage {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteId = JSONGroupSetter.setGroupId(groupName = "Test Site Name");

		for (var imageNumber : list "1,2") {
			Site.openToSiteSettingsPages(
				portlet = "Open Graph",
				siteURLKey = "test-site-name");

			OpenGraph.configureOpenGraph(
				customImage = "true",
				uploadFileName = "Document_${imageNumber}.jpg");

			OpenGraph.viewPreviewImage(imageName = "Document_${imageNumber}.jpg");
		}

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewPreviewImage(imageName = "Document_2.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:image" content="${portalURL}/documents/${siteId}/0/Document_2.jpg''');
	}

	@description = "This makes sure that the previously added image can be cleared at the page level."
	@priority = "5"
	@refactordone
	test CanClearImageAtPageLevel {
		var portalURL = PropsUtil.get("portal.url");

		var siteId = JSONGroupSetter.setGroupId(groupName = "Test Site Name");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewImageFieldDefault();

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		OpenGraph.viewPreviewImage(imageName = "Document_1.jpg");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_2.jpg");

		OpenGraph.clearImage();

		Button.click(button = "Save");

		OpenGraph.viewPreviewImage(imageName = "Document_1.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:image" content="${portalURL}/documents/${siteId}/0/Document_1.jpg''');
	}

	@description = "This makes sure that it will apply the OG image of the page when images are set at both the site level and the page level."
	@priority = "5"
	@refactordone
	test CanClearImageAtSiteLevel {
		var portalURL = PropsUtil.get("portal.url");

		var siteId = JSONGroupSetter.setGroupId(groupName = "Test Site Name");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewPreviewImage(imageName = "Document_1.jpg");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.clearImage();

		Button.click(button = "Save");

		OpenGraph.viewNoPreviewImage(imageName = "Document_1.jpg");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewNoPreviewImage(imageName = "Document_1.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewNoOpenGraphProperties(ogPropertyList = '''property="og:image"''');
	}

	@description = "This ensures that the OG image alt description configuration at page level overrides its configuration at the site level."
	@priority = "4"
	@refactordone
	test CanConfigurePageSpecificAltDescription {
		var portalURL = PropsUtil.get("portal.url");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			altDescription = "This is image alternative description",
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''property="og:image:alt" content="This is image alternative description"''');

		User.firstLoginPG();

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			altDescription = "This is new image alternative description",
			customImage = "true",
			uploadFileName = "Document_2.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''property="og:image:alt" content="This is new image alternative description"''');
	}

	@description = "This makes sure that it will apply the OG image of the page when images are set at both the site level and the page level."
	@priority = "5"
	@refactordone
	test CanConfigurePageSpecificImage {
		var portalURL = PropsUtil.get("portal.url");

		var siteId = JSONGroupSetter.setGroupId(groupName = "Test Site Name");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			uploadFileName = "Document_2.jpg");

		OpenGraph.viewPreviewImage(imageName = "Document_2.jpg");

		Site.openToSiteSettingsPages(
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewPreviewImage(imageName = "Document_1.jpg");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:image" content="${portalURL}/documents/${siteId}/0/Document_2.jpg''');
	}

	@description = "This ensures that the OG image tags will not appear when the HTTPS user disables Open Graph."
	@priority = "5"
	@refactordone
	test CanDisableAfterAddingImage {
		property test.name.skip.portal.instance = "OpenGraphImages#CanDisableAfterAddingImage";

		Navigator.openSpecificURL(url = "https://localhost:8443/web/test-site-name/test-page-name");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.jpg");

		OpenGraph.openToConfigInSystemSettings(portlet = "SEO");

		FormFields.disableCheckbox(fieldName = "Enable Open Graph");

		SystemSettings.saveConfiguration();

		User.logoutPG();

		Navigator.openSpecificURL(url = "https://localhost:8443/web/test-site-name/test-page-name");

		OpenGraph.viewNoOpenGraphProperties(ogPropertyList = '''og:image:url,og:image:secure_url,og:image:type,og:image:width,og:image:height''');
	}

	@description = "This ensures that users can introduce an alternative text for the image."
	@priority = "5"
	@refactordone
	test CanEditAltDescription {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.viewImageAltDescriptionDefault();

		OpenGraph.configureOpenGraph(
			altDescription = "This is image alternative description",
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		Type(
			locator1 = "TextInput#OPEN_GRAPH_IMAGE_ALT_DESCRIPTION",
			value1 = "This is new image alternative description");

		Button.click(button = "Save");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''property="og:image:alt" content="This is new image alternative description"''');
	}

	@description = "This ensures that the HTTPS users can customize OG image tags and generate special tags."
	@priority = "5"
	@refactordone
	test CanViewImageWithMetaTags {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "OpenGraphImages#CanViewImageWithMetaTags";

		Navigator.openSpecificURL(url = "https://localhost:8443/web/test-site-name/test-page-name");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.jpg");

		User.logoutPG();

		Navigator.openSpecificURL(url = "https://localhost:8443/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''og:image:url,og:image:secure_url,og:image:type,og:image:width,og:image:height''');
	}

	@description = "This ensures that the users can introduce an alternative text with translated language for the image."
	@priority = "4"
	@refactordone
	test CanViewTranslatedAltDescription {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			altDescription = "This is image alternative description",
			customImage = "true",
			uploadFileName = "Document_1.jpg");

		OpenGraph.changeLocale(
			fieldName = "openGraphImageAltBoundingBox",
			locale = "ca-ES");

		Type(
			locator1 = "TextInput#OPEN_GRAPH_IMAGE_ALT_DESCRIPTION",
			value1 = "Esta es una descripción de imagen alternativa");

		Button.click(button = "Save");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/ca/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''property="og:image:alt" content="Esta es una descripción de imagen alternativa"''');
	}

}