definition {

	@summary = "Get all current companies in a JSON format"
	macro _getPortalInstances {
		var portalURL = JSONCompany.getDefaultPortalURL();

		if ("${authenticationMethod}" == "By Screen Name") {
			var userName = "test";
		}
		else {
			var userName = "test@liferay.com";
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
			-u ${userName}:test \
			-H Content-Type: application/json
		''';
		var json = JSONCurlUtil.get("${curl}");

		return "${json}";
	}

	@summary = "Creates a new Portal Instance with domain = mailDomain, virtualHost = virtualHost, and portalInstanceId = webId"
	macro addPortalInstance {
		Variables.assertDefined(parameterList = "${domain},${virtualHost},${portalInstanceId}");

		var portalURL = JSONCompany.getDefaultPortalURL();

		var parameters = JSONUtil2._addJSONObject(
			json = "{}",
			key = "domain",
			value = "&quot;${domain}&quot;");

		var parameters = JSONUtil2._addJSONObject(
			json = "${parameters}",
			key = "virtualHost",
			value = "&quot;${virtualHost}&quot;");

		var parameters = JSONUtil2._addJSONObject(
			json = "${parameters}",
			key = "portalInstanceId",
			value = "&quot;${portalInstanceId}&quot;");

		if ("${authenticationMethod}" == "By Screen Name") {
			var userName = "test";
		}
		else {
			var userName = "test@liferay.com";
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
			-u ${userName}:test \
			-d ${parameters} \
			-H Content-Type: application/json
		''';

		JSONCurlUtil.post("${curl}");
	}

	@summary = "Creates a new Portal Instance with domain = mailDomain, virtualHost = virtualHost, portalInstanceId = webId, and siteInitializerKey = virtualInstanceInitializer"
	macro addPortalInstanceWithVirtualInstanceInitializer {
		Variables.assertDefined(parameterList = "${domain},${virtualHost},${portalInstanceId},${siteInitializerKey}");

		var portalURL = JSONCompany.getPortalURL();

		var parameters = JSONUtil2._addJSONObject(
			json = "{}",
			key = "domain",
			value = "&quot;${domain}&quot;");

		var parameters = JSONUtil2._addJSONObject(
			json = "${parameters}",
			key = "virtualHost",
			value = "&quot;${virtualHost}&quot;");

		var parameters = JSONUtil2._addJSONObject(
			json = "${parameters}",
			key = "portalInstanceId",
			value = "&quot;${portalInstanceId}&quot;");

		var parameters = JSONUtil2._addJSONObject(
			json = "${parameters}",
			key = "siteInitializerKey",
			value = "&quot;${siteInitializerKey}&quot;");

		if ("${authenticationMethod}" == "By Screen Name") {
			var userName = "test";
		}
		else {
			var userName = "test@liferay.com";
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
			-u ${userName}:test \
			-d ${parameters} \
			-H Content-Type: application/json
		''';

		JSONCurlUtil.post("${curl}");
	}

	@summary = "Clean up all Portal Instances that are not the default using Headless"
	macro cleanAllPortalInstances {
		var portalInstanceJson = HeadlessPortalInstanceAPI._getPortalInstances(authenticationMethod = "${authenticationMethod}");

		var portalInstanceIds = JSONUtil.getWithJSONPath("${portalInstanceJson}", "$.items..portalInstanceId");

		for (var portalInstanceId : list "${portalInstanceIds}") {
			if ("${portalInstanceId}" != "liferay.com") {
				HeadlessPortalInstanceAPI.deletePortalInstance(
					authenticationMethod = "${authenticationMethod}",
					portalInstanceId = "${portalInstanceId}");
			}
		}
	}

	@summary = "Deletes a Portal Instance with portalInstanceId resembling webId"
	macro deletePortalInstance {
		Variables.assertDefined(parameterList = "${portalInstanceId}");

		var portalURL = JSONCompany.getDefaultPortalURL();

		var portalInstanceId = StringUtil.replace("${portalInstanceId}", " ", "%20");

		if ("${authenticationMethod}" == "By Screen Name") {
			var userName = "test";
		}
		else {
			var userName = "test@liferay.com";
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances/${portalInstanceId} \
			-u ${userName}:test \
			-H Content-Type: application/json
		''';

		JSONCurlUtil.delete("${curl}");
	}

}