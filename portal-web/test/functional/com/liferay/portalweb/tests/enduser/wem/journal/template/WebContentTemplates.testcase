@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test AddTemplateWithStructure {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Administration";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.viewCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name",
			templateScript = "Text.getData()");
	}

	@description = "This is a use case for LPS-116515. The Add FreeMarker button should be hidden when disable template creation in Dynamic Data Mapping."
	@priority = "5"
	test CannotAddTemplateWhenDisableTemplateCreation {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WebContentTemplates#CannotAddTemplateWhenDisableTemplateCreation";

		task ("Disable Template Creation") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.disableCheckbox(fieldName = "Enable Template Creation");

			if (IsElementPresent(locator1 = "Button#UPDATE")) {
				PortletEntry.update();
			}
			else if (IsElementPresent(locator1 = "Button#SAVE")) {
				PortletEntry.save();
			}
		}

		task ("Assert Add FreeMarker button doesn't present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			WaitForPageLoad();

			AssertElementNotPresent(locator1 = "Button#PLUS");
		}

		task ("Enable Template Creation") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.enableCheckbox(fieldName = "Enable Template Creation");

			PortletEntry.update();
		}
	}

	@description = "This is a test for LPS-134063. The template can be copied."
	@priority = "5"
	test CopyTemplate {
		property portal.acceptance = "true";

		task ("Add a template for Basic Web Content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			WebContentTemplates.addCP(
				structureName = "Basic Web Content",
				templateFieldNames = "Content",
				templateName = "WC Template Name");
		}

		task ("Make a copy of new template") {
			WebContentTemplates.copyCP(
				templateCopyName = "WC Template Name (Copy)",
				templateName = "WC Template Name");
		}

		task ("View the copy of template shown in Templates admin") {
			NavItem.viewActive(navItem = "Templates");

			WebContentTemplates.viewCardsEntryCP(templateName = "WC Template Name (Copy)");
		}

		task ("View the original template shown in Templates admin") {
			WebContentTemplates.viewCardsEntryCP(templateName = "WC Template Name");
		}
	}

	@description = "This is a use case for LPS-116515. The user is able to save changes in existing template when disable template creation in Dynamic Data Mapping."
	@priority = "5"
	test SaveChangesInExistingTemplateWhenDisableTemplateCreation {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WebContentTemplates#SaveChangesInExistingTemplateWhenDisableTemplateCreation";

		task ("Add a template for Basic Web Content Structure") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			WebContentTemplates.addCP(
				structureName = "Basic Web Content",
				templateDescription = "WC Template Description",
				templateFieldNames = "Content",
				templateName = "WC Template Name");

			LexiconCard.viewCardTitle(card = "WC Template Name");
		}

		task ("Disable Template Creation") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.disableCheckbox(fieldName = "Enable Template Creation");

			if (IsElementPresent(locator1 = "Button#UPDATE")) {
				PortletEntry.update();
			}
			else if (IsElementPresent(locator1 = "Button#SAVE")) {
				PortletEntry.save();
			}
		}

		task ("Assert can save changes in existing template") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			WebContentTemplates.modifyTemplate(
				templateName = "WC Template Name Edit",
				templatePreviousName = "WC Template Name",
				templateScript = "${content.getName()}: ${content.getData()}");

			LexiconCard.viewCardTitle(card = "WC Template Name Edit");
		}

		task ("Enable Template Creation") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.enableCheckbox(fieldName = "Enable Template Creation");

			PortletEntry.update();
		}
	}

	@description = "This is a test for LPS-125933. Create, read, update and delete a Template based on a Structure with all possible fields."
	@priority = "4"
	test ViewAndEditAsWellAsDeleteTemplateWithAllFieldsStructure {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addFields(fieldNameList = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Link to Page");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoManageTemplatesViaStructures(structureName = "WC Structure Name");

		WebContentTemplates.addCP(
			templateFieldNames = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Link to Page",
			templateName = "WC Template Name");

		WebContentTemplates.gotoTemplateEllipsisItem(
			item = "Edit",
			templateName = "WC Template Name");

		PortletEntry.inputName(name = "WC Template Name Edit");

		for (var fieldFieldLabel : list "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation") {
			var key_fieldFieldLabel = "${fieldFieldLabel}";
			var fieldReference = StringUtil.replace("${fieldFieldLabel}", " ", "");

			AssertTextEquals.assertPartialText(
				locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR_CONTENT",
				value1 = "${fieldReference}.getData()");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR_CONTENT",
			value1 = "LinktoPage.getFriendlyUrl()");

		DDLDataDefinition.save();

		LexiconCard.viewCardTitle(card = "WC Template Name Edit");

		WebContentTemplates.deleteCP(templateName = "WC Template Name Edit");

		LexiconCard.viewCardNotPresent(card = "WC Template Name Edit");
	}

	@description = "This is a use case for LPS-116515. The creation of template is not allowed when disable template creation in Dynamic Data Mapping."
	@priority = "4"
	test ViewTemplateCreationFailureWhenDisableTemplateCreation {
		property test.name.skip.portal.instance = "WebContentTemplates#ViewTemplateCreationFailureWhenDisableTemplateCreation";

		task ("Add a template for Basic Web Content structure but not save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			LexiconEntry.gotoAdd();

			Pause(locator1 = "3000");
		}

		task ("Disable Template Creation") {
			Open.openInTheNewTab(locator1 = "http://localhost:8080");

			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			SelectWindow(locator1 = "title=Home - ${siteName}");

			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "System Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.disableCheckbox(fieldName = "Enable Template Creation");

			if (IsElementPresent(locator1 = "Button#UPDATE")) {
				PortletEntry.update();
			}
			else if (IsElementPresent(locator1 = "Button#SAVE")) {
				PortletEntry.save();
			}
		}

		task ("View template creation failure") {
			Close.closeAndSelectWindow(locator1 = "title=New Template - Test Site Name - ${siteName}");

			WebContentTemplates.inputTemplateAddScreenFields(
				structureName = "Basic Web Content",
				templateDescription = "WC Template Description",
				templateFieldNames = "Content",
				templateName = "WC Template Name");

			ClickNoError.mouseDownMouseUp(locator1 = "//span[contains(@class,'btn')][normalize-space(text())='Save']/..");

			Alert.viewErrorMessage(errorMessage = "Your request failed to complete.");
		}

		task ("Enable Template Creation") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Dynamic Data Mapping",
				configurationName = "Dynamic Data Mapping Web",
				configurationScope = "System Scope");

			FormFields.enableCheckbox(fieldName = "Enable Template Creation");

			PortletEntry.update();
		}
	}

}