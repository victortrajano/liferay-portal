@component-name = "portal-upgrades"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Master Page Templates,Upgrades WEM";
	property testray.main.component.name = "Upgrades WEM";

	setUp {
		SignIn.signIn();

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation(value1 = "${portalURL}/web/guest?SM_USER=test@liferay.com");

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade704 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		echo("Checked Portlet");
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade713 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.10.3";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Private",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Test Template Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade721 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Public Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade7016 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.10.6";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		echo("Checked Portlet");
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade71103 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.10.3";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Private",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Test Template Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}
	}

	@description = "This is a use case for LPS-102202."
	@priority = "5"
	test ViewBlankAsMasterAfterUpgrade72101 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.10.1";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Category Filter");

		Portlet.viewTitle(portletName = "Tag Filter");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Public Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		var n = "1";

		for (var text : list "Submit,Cancel") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "footer",
				position = "${n}",
				text = "${text}");

			var n = ${n} + 1;
		}
	}

}