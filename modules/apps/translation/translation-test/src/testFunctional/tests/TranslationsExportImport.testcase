@component-name = "portal-collaboration"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Translations Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that a translated zip file contains multiple web contents with multiple available languages can be exported."
	@priority = "5"
	test CanExportMultipleWCsWithMultipleLanguages {
		property osgi.module.configuration.file.names = "com.liferay.journal.web.internal.configuration.FFBulkTranslationConfiguration.config";
		property osgi.module.configurations = "bulkTranslationEnabled=&quot;true&quot;";
		property portal.acceptance = "false";

		for (var i : list "1,2,3") {
			JSONWebcontent.addWebContent(
				content = "Web Content${i}",
				description = "Description${i}",
				groupName = "Guest",
				title = "Web Content Title${i}");
		}

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		Translations.gotoBulkExportTranslation(
			exportTranslationEntry = "Web Content Title1,Web Content Title3",
			toolbarOptions = "true");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "French (France),Japanese (Japan),Spanish (Spain)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title3");
	}

	@description = "This ensures that a translated zip file with all available language can be exported."
	@priority = "5"
	@refactordone
	test CanExportWCWithAllLanguages {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Spanish (Spain),Swedish (Sweden)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that a translated zip file with an available language can be exported."
	@priority = "5"
	@refactordone
	test CanExportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that user can import the exported xliff file with 1.2 version."
	@priority = "5"
	@refactordone
	test CanImportExportedXLIFF {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			exportFileFormat = "XLIFF 1.2",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb",
			descriptionTranslation = "Descripcion",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			filePath = "/WebContentTitle-en_US",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that the translation files contians multiple web contents can be imported from a zip."
	@priority = "5"
	test CanImportMultipleWCs {
		property osgi.module.configuration.file.names = "com.liferay.journal.web.internal.configuration.FFBulkTranslationConfiguration.config";
		property osgi.module.configurations = "bulkTranslationEnabled=&quot;true&quot;";
		property portal.acceptance = "false";

		for (var i : list "1,2,3") {
			JSONWebcontent.addWebContent(
				content = "WebContent${i}",
				description = "Description${i}",
				groupName = "Guest",
				title = "WebContentTitle${i}");
		}

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		Translations.gotoBulkExportTranslation(exportTranslationEntry = "WebContentTitle1,WebContentTitle3");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb1",
			descriptionTranslation = "Descripcion1",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb1",
			translationFileName = "WebContentTitle1-en_US-es_ES",
			translationZipFileName = "WebContentTitle3-en_US",
			webContentContent = "WebContent1",
			webContentDescription = "Description1",
			webContentTitle = "WebContentTitle1");

		Translations.translateFile(
			contentTranslation = "Contenidoweb3",
			descriptionTranslation = "Descripcion3",
			encoding = "false",
			operation = "zip",
			titleTranslation = "Titulodelcontenidoweb3",
			translationFileName = "WebContentTitle3-en_US-es_ES",
			translationZipFileName = "WebContentTitle3-en_US",
			webContentContent = "WebContent3",
			webContentDescription = "Description3",
			webContentTitle = "WebContentTitle3");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		Translations.gotoBulkImportTranslation();

		Translations.importTranslation(
			fileName = "WebContentTitle3-en_US_translated.zip",
			filePath = "");

		for (var i : list "1,3") {
			WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle${i}");

			PortletEntry.changeLocale(locale = "es-ES");

			WebContent.viewCP(
				webContentContent = "Contenidoweb${i}",
				webContentDescription = "Descripcion${i}",
				webContentTitle = "Titulodelcontenidoweb${i}");

			WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");
		}

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle2");

		Translations.viewUntranslatedStatus(locale = "es-ES");
	}

	@description = "This ensures that the translation files can be imported from a zip."
	@priority = "5"
	@refactordone
	test CanImportWCWithZipFile {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "German (Germany),Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb",
			descriptionTranslation = "Descripcion",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.translateFile(
			contentTranslation = "Internetinhalt",
			descriptionTranslation = "Beschreibung",
			encoding = "false",
			operation = "zip",
			titleTranslation = "TiteldesWebinhalts",
			translationFileName = "WebContentTitle-en_US-de_DE",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US_translated.zip",
			filePath = "",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");

		PortletEntry.changeLocale(locale = "de-DE");

		WebContent.viewCP(
			webContentContent = "Internetinhalt",
			webContentDescription = "Beschreibung",
			webContentTitle = "TiteldesWebinhalts");
	}

	@description = "This ensures that a translated file(.xlf) with an available language can be imported."
	@priority = "5"
	@refactordone
	test CanImportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb",
			descriptionTranslation = "Descripcion",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			filePath = "/WebContentTitle-en_US",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that a translated file(.xlf) after re-encoding it to UTF-8 can be imported."
	@priority = "4"
	@refactordone
	test CanImportWebContentWithUTF8 {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Japanese (Japan)");

		Translations.translateFile(
			contentTranslation = "Webコンテンツ",
			descriptionTranslation = "説明",
			encoding = "utf8",
			operation = "unzip",
			titleTranslation = "Webコンテンツのタイトル",
			translationFileName = "WebContentTitle-en_US-ja_JP",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-ja_JP_utf8.xlf",
			filePath = "/WebContentTitle-en_US",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "Webコンテンツ",
			webContentDescription = "説明",
			webContentTitle = "Webコンテンツのタイトル");
	}

	@description = "This ensures that a translated file(.xliff) with an available language can be imported."
	@priority = "5"
	@refactordone
	test CanImportWebContentWithXliffFile {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "German (Germany)");

		Translations.translateFile(
			contentTranslation = "Internetinhalt",
			descriptionTranslation = "Beschreibung",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "TiteldesWebinhalts",
			translationFileName = "WebContentTitle-en_US-de_DE",
			translationFileRename = "true",
			translationZipFileName = "WebContentTitle-en_US",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-de_DE.xliff",
			filePath = "/WebContentTitle-en_US",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "de-DE");

		WebContent.viewCP(
			webContentContent = "Internetinhalt",
			webContentDescription = "Beschreibung",
			webContentTitle = "TiteldesWebinhalts");
	}

	@description = "This is a test for LPS-136979. It checks that a user can import translation with long inputs."
	@priority = "4"
	test CanImportWithLongInputs {
		property osgi.module.configuration.file.names = "com.liferay.journal.web.internal.configuration.FFBulkTranslationConfiguration.config";
		property osgi.module.configurations = "bulkTranslationEnabled=&quot;true&quot;";
		property portal.acceptance = "false";

		JSONWebcontent.addWebContent(
			content = "WebContentContent",
			description = "Description",
			groupName = "Guest",
			title = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoBulkExportTranslation(exportTranslationEntry = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb",
			descriptionTranslation = "Descripcion",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-Titulodelcontenidoweb",
			translationFileName = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-en_US-es_ES",
			translationZipFileName = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-en_US",
			webContentContent = "WebContentContent",
			webContentDescription = "Description",
			webContentTitle = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess");

		Translations.importTranslation(
			fileName = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-en_US-es_ES.xlf",
			filePath = "/LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-en_US",
			webContentTitle = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess");

		WebContentNavigator.gotoEditCP(webContentTitle = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "LongInputsForWebContentTitleToCheckTheTranslationsExportingAndImportingProcess-Titulodelcontenidoweb");
	}

	@description = "This is a test for LPS-136980. It checks that a user can import translation with special characters."
	@priority = "4"
	test CanImportWithSpecialCharacters {
		WebContentNavigator.openToAddBasicArticle(
			groupName = "Guest",
			siteURLKey = "guest");

		WebContent.addCP(
			webContentContent = "WebContentContent@!#",
			webContentDescription = "WebContentDescription@!#",
			webContentTitle = "WebContentTitle@!&#");

		PortletEntry.publish();

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb@!#",
			descriptionTranslation = "Descripcion@!#",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb@!&#",
			translationFileName = "WebContentTitle@!&#-en_US-es_ES",
			translationZipFileName = "WebContentTitle@!&#-en_US",
			webContentContent = "WebContentContent@!#",
			webContentDescription = "WebContentDescription@!#",
			webContentTitle = "WebContentTitle@!&#");

		Translations.importTranslation(
			fileName = "WebContentTitle@!&#-en_US-es_ES.xlf",
			filePath = "/WebContentTitle@!&#-en_US",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb@!#",
			webContentDescription = "Descripcion@!#",
			webContentTitle = "Titulodelcontenidoweb@!&#");
	}

	@description = "This ensures that only the valid translation files can be imported from a zip."
	@priority = "5"
	test CanPartiallyImportMultipleWCs {
		property osgi.module.configuration.file.names = "com.liferay.journal.web.internal.configuration.FFBulkTranslationConfiguration.config";
		property osgi.module.configurations = "bulkTranslationEnabled=&quot;true&quot;";
		property portal.acceptance = "false";

		for (var i : list "1,2,3") {
			JSONWebcontent.addWebContent(
				content = "WebContent${i}",
				description = "Description${i}",
				groupName = "Guest",
				title = "WebContentTitle${i}");
		}

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		Translations.gotoBulkExportTranslation(exportTranslationEntry = "WebContentTitle1,WebContentTitle3");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Japanese (Japan),Spanish (Spain)");

		Translations.translateFile(
			contentTranslation = "Contenidoweb1",
			descriptionTranslation = "Descripcion1",
			encoding = "false",
			operation = "unzip",
			titleTranslation = "Titulodelcontenidoweb1",
			translationFileName = "WebContentTitle1-en_US-es_ES",
			translationZipFileName = "WebContentTitle3-en_US",
			webContentContent = "WebContent1",
			webContentDescription = "Description1",
			webContentTitle = "WebContentTitle1");

		Translations.updateTranslateFileID(
			translationEntryType = "JournalArticle",
			translationFileName = "WebContentTitle1-en_US-ja_JP",
			translationZipFileName = "WebContentTitle3-en_US");

		Translations.translateFile(
			contentTranslation = "Webコンテンツ3",
			descriptionTranslation = "説明3",
			encoding = "utf8",
			operation = "false",
			titleTranslation = "Webコンテンツのタイトル3",
			translationFileName = "WebContentTitle3-en_US-ja_JP",
			translationZipFileName = "WebContentTitle3-en_US",
			webContentContent = "WebContent3",
			webContentDescription = "Description3",
			webContentTitle = "WebContentTitle3");

		Translations.translateFile(
			contentTranslation = "Contenidoweb3",
			descriptionTranslation = "Descripcion3",
			encoding = "false",
			operation = "zip",
			titleTranslation = "Titulodelcontenidoweb3",
			translationFileName = "WebContentTitle3-en_US-es_ES",
			translationZipFileName = "WebContentTitle3-en_US",
			webContentContent = "WebContent3",
			webContentDescription = "Description3",
			webContentTitle = "WebContentTitle3");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		Translations.gotoBulkImportTranslation();

		Translations.importTranslation(
			errorMessage = "1 Error: Some files could not be published, check them and upload another file.",
			errorMessageItem = "The translation file does not correspond to this web content.",
			failFileName = "WebContentTitle1-en_US-ja_JP.xlf",
			fileName = "WebContentTitle3-en_US_translated.zip",
			filePath = "",
			successFileName = "WebContentTitle1-en_US-es_ES.xlf",
			successFileName2 = "WebContentTitle3-en_US-es_ES.xlf",
			successFileName3 = "WebContentTitle3-en_US-ja_JP_utf8.xlf",
			successFileNumber = "3 Files Published");

		for (var i : list "1,3") {
			WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle${i}");

			PortletEntry.changeLocale(locale = "es-ES");

			WebContent.viewCP(
				webContentContent = "Contenidoweb${i}",
				webContentDescription = "Descripcion${i}",
				webContentTitle = "Titulodelcontenidoweb${i}");

			WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");
		}

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle1");

		Translations.viewUntranslatedStatus(locale = "ja-JP");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle3");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "Webコンテンツ3",
			webContentDescription = "説明3",
			webContentTitle = "Webコンテンツのタイトル3");
	}

}