@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Localization";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "4"
	test MoveCurrentLanguagesToAvailable {
		property test.name.skip.portal.instance = "LocalizationUsecase#MoveCurrentLanguagesToAvailable";
		property testray.component.names = "Localization";

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			widgetName = "Language Selector");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.moveLanguagesToAvailable();

		LanguagePortlet.moveLanguagesToCurrent(currentLanguages = "English (United States),German (Germany),Spanish (Spain)");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewLanguageCurrent(locale = "en-US");

		LanguagePortlet.viewLanguagesAbsent(missingLocales = "français-France,magyar-Magyarország,日本語-日本,português-Brasil,中文-中国,עברית-ישראל,suomi-Suomi,català-Espanya,nederlands-Nederland");

		LanguagePortlet.viewLanguagesPresent(currentLocales = "deutsch-Deutschland,español-España");
	}

	@priority = "4"
	test ViewDisplayOptionsViaLanguagePortlet {
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "LocalizationUsecase#ViewDisplayOptionsViaLanguagePortlet";
		property testray.component.names = "Localization";

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			widgetName = "Language Selector");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.toggleDisplayTemplate(displayStyle = "Icon Menu");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewLanguageCurrent(locale = "en-US");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.toggleDisplayTemplate(displayStyle = "Long Text");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewDisplayTemplateLongText(language = "suomi");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.toggleDisplayTemplate(displayStyle = "Select Box");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewDisplayTemplateSelectBox(language = "English");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.toggleDisplayTemplate(displayStyle = "Short Text");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewDisplayTemplateShortText(languageKey = "hu");
	}

	@priority = "4"
	test ViewRemovedCurrentPortalLanguagesViaLanguagePortlet {
		property test.name.skip.portal.instance = "LocalizationUsecase#ViewRemovedCurrentPortalLanguagesViaLanguagePortlet";
		property testray.component.names = "Localization";

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			widgetName = "Language Selector");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		PortalSettings.gotoConfiguration(
			configurationCategory = "Localization",
			configurationName = "Language",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.configureCurrentLanguagesCP(currentPortalLanguages = "Chinese (China),English (United States),French (France)");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewLanguageCurrent(locale = "en-US");

		LanguagePortlet.viewLanguagesAbsent(missingLocales = "magyar-Magyarország,日本語-日本,português-Brasil,עברית-ישראל,suomi-Suomi,català-Espanya,nederlands-Nederland,deutsch-Deutschland,español-España");

		LanguagePortlet.viewLanguagesPresent(currentLocales = "français-France,中文-中国");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.configureViewCurrentLanguages(currentLanguages = "Chinese (China),French (France),English (United States)");
	}

	@priority = "4"
	test ViewRemovedCurrentSiteLanguagesViaLanguagePortlet {
		property test.name.skip.portal.instance = "LocalizationUsecase#ViewRemovedCurrentSiteLanguageViaLanguagePortlet";
		property testray.component.names = "Localization";

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			widgetName = "Language Selector");

		Site.openSiteSettingsAdmin(siteURLKey = "test-site-name");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),German (Germany),Spanish (Spain)",
			defaultSiteLanguage = "English (United States)",
			displaySettings = "Display Settings");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		LanguagePortlet.viewLanguageCurrent(locale = "en-US");

		LanguagePortlet.viewLanguagesAbsent(missingLocales = "français-France,magyar-Magyarország,日本語-日本,português-Brasil,中文-中国,עברית-ישראל,suomi-Suomi,català-Espanya,nederlands-Nederland");

		LanguagePortlet.viewLanguagesPresent(currentLocales = "deutsch-Deutschland,español-España");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		LanguagePortlet.configureViewCurrentLanguages(currentLanguages = "English (United States),German (Germany),Spanish (Spain)");
	}

}