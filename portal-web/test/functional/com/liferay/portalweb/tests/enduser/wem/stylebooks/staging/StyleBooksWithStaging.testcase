@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Style Books";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Activate local live staging") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name");

			Staging.activateStagingCP(siteName = "Test Site Name");
		}

		task ("Add a style book") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-site-name-staging");

			StyleBooksAdmin.addStyleBooks(styleBookName = "Test Style Book Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-116106. Page Creator can change style book of content page via Look and Feel settings in Staging site."
	@priority = "3"
	test ChangeStyleBookOfContentPageViaLookAndFeelInStagingSite {
		task ("Edit the style book and Publish it") {
			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#00FF00");

			StyleBooks.waitForAutoSave();

			StyleBooks.selectForm(formName = "Typography");

			StyleBooks.expandSection(sectionName = "Headings");

			Type(
				key_fieldLabel = "Heading 1 Font Size",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "2rem");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				type = "content");
		}

		task ("Add a Banner Center fragment to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			PageEditor.addFragment(
				collectionName = "Featured Content",
				composition = "true",
				fragmentName = "Banner Center");
		}

		task ("Change to the new style book via Look and Feel") {
			PageEditor.gotoTab(tabName = "Page Design Options");

			Click(locator1 = "PageEditor#MORE_LINK");

			AssertTextEquals(
				key_styleBookName = "Inherited",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Inherited");

			AssertClick(
				key_text = "Change Style Book",
				locator1 = "Button#ANY",
				value1 = "Change Style Book");

			StyleBooks.selectStyleBook(styleBookName = "Test Style Book Name");

			AssertTextEquals(
				key_styleBookName = "Test Style Book Name",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Test Style Book Name");

			Button.clickSave();

			Alert.viewSuccessMessage();

			Navigator.gotoBack();

			AssertCssValue(
				fragmentName = "button",
				id = "link",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				fragmentName = "heading",
				id = "element-text",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "font-size",
				value1 = "32px");

			PageEditor.clickPublish();
		}

		task ("Assert the new style book is applied to content page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "32px");
		}

		task ("Change to default style book via Look and Feel") {
			ContentPages.gotoPageEditor();

			PageEditor.gotoTab(tabName = "Page Design Options");

			Click(locator1 = "PageEditor#MORE_LINK");

			AssertTextEquals(
				key_styleBookName = "Test Style Book Name",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Test Style Book Name");

			AssertClick(
				key_text = "Change Style Book",
				locator1 = "Button#ANY",
				value1 = "Change Style Book");

			StyleBooks.selectStyleBook(styleBookName = "Inherited from Master");

			AssertTextEquals(
				key_styleBookName = "Inherited from Master",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Inherited from Master");

			Button.clickSave();

			Alert.viewSuccessMessage();

			Navigator.gotoBack();

			AssertCssValue(
				fragmentName = "button",
				id = "link",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "background-color",
				value1 = "rgba(11, 95, 255, 1)");

			AssertCssValue(
				fragmentName = "heading",
				id = "element-text",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "font-size",
				value1 = "26px");

			PageEditor.clickPublish();
		}

		task ("Assert the default style book is applied to content page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(11, 95, 255, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "26px");
		}
	}

	@description = "This is a test for LPS-116106. Page Creator can quickly change style book via Page Design Options panel in Staging site."
	@priority = "4"
	test ChangeStyleBookOfContentPageViaPageDesignOptionsPanelInStagingSite {
		task ("Edit the style book and Publish it") {
			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#00FF00");

			StyleBooks.waitForAutoSave();

			StyleBooks.selectForm(formName = "Typography");

			StyleBooks.expandSection(sectionName = "Headings");

			Type(
				key_fieldLabel = "Heading 1 Font Size",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "2rem");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				type = "content");
		}

		task ("Change to the new style book via Page Design Options panel") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			PageEditor.addFragment(
				collectionName = "Featured Content",
				composition = "true",
				fragmentName = "Banner Center");

			PageEditor.gotoTab(tabName = "Page Design Options");

			Navigator.gotoNavTab(navTab = "Style Book");

			AssertElementPresent(
				key_card = "Inherited from Master",
				locator1 = "Card#CARD_SELECTED");

			StyleBooks.selectStyleBookViaPageDesignOptions(styleBookName = "Test Style Book Name");

			AssertCssValue(
				fragmentName = "button",
				id = "link",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				fragmentName = "heading",
				id = "element-text",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "font-size",
				value1 = "32px");

			PageEditor.clickPublish();
		}

		task ("Assert the new style book is applied to content page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "32px");
		}

		task ("Change to the default style book via Page Design Options panel") {
			ContentPages.gotoPageEditor();

			PageEditor.gotoTab(tabName = "Page Design Options");

			Navigator.gotoNavTab(navTab = "Style Book");

			AssertElementPresent(
				key_card = "Test Style Book Name",
				locator1 = "Card#CARD_SELECTED");

			StyleBooks.selectStyleBookViaPageDesignOptions(styleBookName = "Inherited from Master");

			AssertCssValue(
				fragmentName = "button",
				id = "link",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "background-color",
				value1 = "rgba(11, 95, 255, 1)");

			AssertCssValue(
				fragmentName = "heading",
				id = "element-text",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "font-size",
				value1 = "26px");

			PageEditor.clickPublish();
		}

		task ("Assert the new style book is applied to content page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(11, 95, 255, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "26px");
		}
	}

	@description = "This is a test for LPS-116106 and LPS-121004. Page Creator can change style book of widget page via Look and Feel settings in Staging site."
	@priority = "3"
	test ChangeStyleBookOfWidgetPageViaLookAndFeelInStagingSite {
		task ("Edit the style book and Publish it") {
			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#00FF00");

			StyleBooks.waitForAutoSave();

			Pause(locator1 = "3000");

			StyleBooks.expandSection(sectionName = "Button Secondary");

			Type(
				key_fieldLabel = "Color",
				key_groupLabel = "Button Secondary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#FF0000");

			StyleBooks.waitForAutoSave();

			Pause(locator1 = "3000");

			StyleBooks.expandSection(sectionName = "Button Outline Secondary");

			Type(
				key_fieldLabel = "Color",
				key_groupLabel = "Button Outline Secondary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#0000FF");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false");
		}

		task ("Add a Blogs portlet to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				widgetName = "Blogs");
		}

		task ("Change to the new style book via Look and Feel") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			Click(locator1 = "ControlMenu#EDIT_COG");

			Navigator.gotoNavTab(navTab = "Look and Feel");

			AssertTextEquals(
				key_styleBookName = "Inherited",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Inherited");

			AssertClick(
				key_text = "Change Style Book",
				locator1 = "Button#ANY",
				value1 = "Change Style Book");

			StyleBooks.selectStyleBook(styleBookName = "Test Style Book Name");

			AssertTextEquals(
				key_styleBookName = "Test Style Book Name",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Test Style Book Name");

			Button.clickSave();

			Alert.viewSuccessMessage();

			Navigator.gotoBack();

			AssertCssValue(
				key_text = "New Entry",
				locator1 = "Button#ANY",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				key_text = "Subscribe",
				locator1 = "Button#ANY",
				locator2 = "color",
				value1 = "rgba(255, 0, 0, 1)");

			AssertCssValue(
				key_text = "RSS",
				locator1 = "Button#ANY",
				locator2 = "color",
				value1 = "rgba(0, 0, 255, 1)");
		}

		task ("Change to default style book via Look and Feel") {
			Click(locator1 = "ControlMenu#EDIT_COG");

			Navigator.gotoNavTab(navTab = "Look and Feel");

			AssertTextEquals(
				key_styleBookName = "Test Style Book Name",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Test Style Book Name");

			AssertClick(
				key_text = "Change Style Book",
				locator1 = "Button#ANY",
				value1 = "Change Style Book");

			StyleBooks.selectStyleBook(styleBookName = "Inherited from Master");

			AssertTextEquals(
				key_styleBookName = "Inherited from Master",
				locator1 = "PagesAdmin#STYLE_BOOK_NAME",
				value1 = "Inherited from Master");

			Button.clickSave();

			Alert.viewSuccessMessage();

			Navigator.gotoBack();

			AssertCssValue(
				key_text = "New Entry",
				locator1 = "Button#ANY",
				locator2 = "background-color",
				value1 = "rgba(11, 95, 255, 1)");

			AssertCssValue(
				key_text = "Subscribe",
				locator1 = "Button#ANY",
				locator2 = "color",
				value1 = "rgba(107, 108, 126, 1)");

			AssertCssValue(
				key_text = "RSS",
				locator1 = "Button#ANY",
				locator2 = "color",
				value1 = "rgba(107, 108, 126, 1)");
		}
	}

	@description = "This is a test for LPS-116078. Can preview the effect on page when edit the style book in Staging site."
	@priority = "4"
	test PreviewTheEffectOnPageInStyleBookEditorInStagingSite {
		task ("Edit the style book and Publish it") {
			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#FF0000");

			StyleBooks.waitForAutoSave();

			StyleBooks.selectForm(formName = "Typography");

			StyleBooks.expandSection(sectionName = "Headings");

			Type(
				key_fieldLabel = "Heading 1 Font Size",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "2rem");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				type = "content");
		}

		task ("Add a Banner Center to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			PageEditor.addFragment(
				collectionName = "Featured Content",
				composition = "true",
				fragmentName = "Banner Center");

			PageEditor.clickPublish();
		}

		task ("Preview style book effect on page in page preview iframe") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-site-name-staging");

			StyleBooksAdmin.gotoStyleBook(styleBookName = "Test Style Book Name");

			SelectFrame.selectFrameNoLoading(locator1 = "StyleBookEditor#PAGE_PREVIEW_IFRAME");

			AssertVisible(
				key_pageName = "Test Page Name",
				locator1 = "Home#PAGE");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(255, 0, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "32px");
		}
	}

	@description = "This is a test for LPS-116077. The data of Style Books is immediately available to Live site when manage it in Staging site."
	@priority = "5"
	test ViewDataChangesOfStyleBookAreImmediatelyAvailableToLiveSite {
		property portal.acceptance = "true";

		task ("Edit the style book and Publish it") {
			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#00FF00");

			StyleBooks.waitForAutoSave();

			StyleBooks.selectForm(formName = "Typography");

			StyleBooks.expandSection(sectionName = "Headings");

			Type(
				key_fieldLabel = "Heading 1 Font Size",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "2rem");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Assert the new style book is shown in Style Books admin") {
			StyleBooksAdmin.viewStyleBooksPresent(styleBookName = "Test Style Book Name");
		}

		task ("Assert specific warning message is shown in Style Books admin") {
			Alert.viewWarningSpecific(warningMessage = "The data of this portlet is not staged. Any data changes are immediately available to the Local Live site.");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				type = "content");
		}

		task ("Add a Banner Center to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			PageEditor.addFragment(
				collectionName = "Featured Content",
				composition = "true",
				fragmentName = "Banner Center");
		}

		task ("Change to the new style book") {
			PageEditor.gotoTab(tabName = "Page Design Options");

			Navigator.gotoNavTab(navTab = "Style Book");

			AssertElementPresent(
				key_card = "Inherited from Master",
				locator1 = "Card#CARD_SELECTED");

			StyleBooks.selectStyleBookViaPageDesignOptions(styleBookName = "Test Style Book Name");

			AssertCssValue(
				fragmentName = "button",
				id = "link",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				fragmentName = "heading",
				id = "element-text",
				index = "1",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT",
				locator2 = "font-size",
				value1 = "32px");

			PageEditor.clickPublish();
		}

		task ("Assert the new style book is applied to content page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name Staging");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "32px");
		}

		task ("Publish to Live") {
			Staging.gotoPublishToLive();

			Staging.publishToLive();
		}

		task ("Assert the new style book is applied to content page in Live site") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(0, 255, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "32px");
		}

		task ("Edit the style book in Staging site") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-site-name-staging");

			StyleBooksAdmin.gotoStyleBookEllipsisItem(
				item = "Edit",
				styleBookName = "Test Style Book Name");

			Pause(locator1 = "3000");

			StyleBooks.selectForm(formName = "Buttons");

			StyleBooks.expandSection(sectionName = "Button Primary");

			Type(
				key_fieldLabel = "Background Color",
				key_groupLabel = "Button Primary",
				locator1 = "TextInput#GROUPED_TEXT_INPUT",
				value1 = "#FF0000");

			StyleBooks.waitForAutoSave();

			StyleBooks.selectForm(formName = "Typography");

			StyleBooks.expandSection(sectionName = "Headings");

			Type(
				key_fieldLabel = "Heading 1 Font Size",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "1.5rem");

			StyleBooks.waitForAutoSave();

			StyleBooks.clickPublish();
		}

		task ("Assert the changes are immediately available to content page in Live site") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssertCssValue(
				key_content = "Go Somewhere",
				key_element = "a",
				key_id = "link",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "background-color",
				value1 = "rgba(255, 0, 0, 1)");

			AssertCssValue(
				key_content = "Banner Title Example",
				key_element = "h1",
				key_id = "element-text",
				key_type = "text",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "font-size",
				value1 = "24px");
		}

		task ("Assert the Style Books portlet is shown in Live site") {
			ProductMenuHelper.openProductMenu();

			ProductMenuHelper.expandCategory(category = "Design");

			AssertVisible(
				key_portlet = "Style Books",
				locator1 = "ProductMenu#PORTLET");
		}
	}

}