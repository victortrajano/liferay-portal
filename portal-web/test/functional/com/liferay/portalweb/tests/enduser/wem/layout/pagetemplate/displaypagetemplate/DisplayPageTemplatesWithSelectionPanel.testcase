@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Display Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a display page") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				subType = "Basic Web Content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-122142. View the visual style of mapped editable field items in Selection panel of display page template."
	@priority = "4"
	test ViewVisualStyleOfMappedEditableFieldItems {
		task ("Add a Heading fragment to display page template") {
			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Display Page Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");
		}

		task ("Map the Content field to editable field") {
			PageEditorMapping.gotoEditableFieldMapping(
				fragmentName = "Heading",
				id = "element-text");

			Pause(locator1 = "3000");

			Select(
				key_fieldLabel = "Field",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Content");
		}

		task ("View the visual style of Content item in Selection panel") {
			AssertCssValue(
				key_nodeName = "Content",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_NAME",
				locator2 = "color",
				value1 = "rgba(149, 76, 255, 1)");
		}

		task ("Add a Collection Display fragment to page") {
			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Display",
				targetFragmentName = "Heading");
		}

		task ("Select the Most Viewed Assets in Collection Display") {
			PageEditor.editCollectionDisplay(
				fragmentName = "Collection Display",
				infoListProviderName = "Most Viewed Assets");
		}

		task ("Add a Button fragment to Collection Display") {
			PageEditor.addFragmentToCollectionDisplay(
				collectionName = "Basic Components",
				entryTitle = "",
				fragmentName = "Button");
		}

		task ("Map the Title field to editable field") {
			PageEditorMapping.gotoEditableFieldMapping(
				fragmentName = "Button",
				id = "link");

			Pause(locator1 = "3000");

			Select(
				key_fieldLabel = "Field",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Title");
		}

		task ("View the visual style of Title item in Selection panel") {
			AssertCssValue(
				key_nodeName = "Title",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_NAME",
				locator2 = "color",
				value1 = "rgba(149, 76, 255, 1)");
		}
	}

}