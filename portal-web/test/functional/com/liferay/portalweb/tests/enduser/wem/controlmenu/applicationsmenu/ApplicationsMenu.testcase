@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Control Menu";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-115218. Can choose to a site in Product Menu when disable Applications Menu. Can navigate to site-scope applications in Product Menu when disable Global Apps Menu."
	@priority = "5"
	@uitest
	test NavigateToSiteAndSiteScopeApplicationsInProductMenuWhenDisableApplicationsMenu {
		property portal.acceptance = "true";

		task ("Disable the Applications Menu") {
			PortalSettings.disableApplicationsMenu();
		}

		task ("Assert Choose a Site is shown in Product Menu panel") {
			ProductMenuHelper.openProductMenu();

			AssertElementPresent(locator1 = "ProductMenu#CHOOSE_A_SITE");

			AssertElementNotPresent(locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME");
		}

		task ("Navigate to the default site via Product Menu panel") {
			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			ProductMenuHelper.openWorkspace();

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Pause(locator1 = "3000");

			Navigator.gotoNavItem(navItem = "All Sites");

			SiteSelector.selectSite(site = "${siteName}");

			AssertTextEquals.assertPartialText(
				locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME",
				value1 = "${siteName}");
		}

		task ("Assert site administration toggle works") {
			Click(
				key_panel = "site_administration",
				locator1 = "ProductMenu#PANEL_EXPANDED");
		}

		task ("Navigate to the Pages admin via Product Menu panel") {
			ProductMenu.gotoPortletWhenDisableApplicationsMenu(
				category = "Site Builder",
				panel = "Site Administration",
				portlet = "Pages");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Pages");
		}

		task ("Enable the Applications Menu") {
			PortalSettings.enableApplicationsMenu();
		}
	}

	@description = "This is a use case for LPS-112989 and LPS-112993. View All link will be shown in Applications Menu when the total amount of Recently Visited and My Sites more than 7."
	@priority = "5"
	@uitest
	test ShowViewAllWhenTotalAmountOfSitesFromRecentlyVisitedAndMySitesMoreThanSeven {
		property portal.acceptance = "true";

		task ("Add six new sites") {
			for (var n : list "1,2,3,4,5,6") {
				JSONGroup.addGroup(groupName = "Test Site Name ${n}");
			}
		}

		task ("Assert View All link shown in Applications Menu") {
			ApplicationsMenuHelper.openApplicationsMenu();

			AssertVisible(locator1 = "ApplicationsMenu#VIEW_ALL_LINK");
		}

		task ("Go to Site via View All link") {
			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(locator1 = "ApplicationsMenu#VIEW_ALL_LINK");

			AssertVisible(locator1 = "Portlet#MODAL_TITLE");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Navigator.gotoNavItem(navItem = "All Sites");

			SiteSelector.selectSite(site = "Test Site Name 3");

			ProductMenuHelper.openProductMenu();

			AssertTextEquals.assertPartialText(
				locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME",
				value1 = "Test Site Name 3");
		}
	}

	@description = "This is a use case for LPS-112990, LPS-112992 and LPS-112989. The Applications Menu icon and User Avatar icon buttons are located in Control Menu when user is in application admin. The Applications Menu icon is located in Control Menu but User Avatar icon is located in Nav Bar when user is in site page. The Global Menu icon is not shown but User Avatar icon is located in Nav Bar when user is in page editor. The Global Menu icon is located in Control Menu but User Avatar icon is located in Nav Bar when user is in Staging site page and Live site page."
	@priority = "5"
	@uitest
	test ViewLocationOfApplicationsMenuIconAndUserAvatarIcon {
		property portal.acceptance = "true";

		task ("The Applications Menu icon is located in Control Menu but User Avatar icon is located in Nav Bar when user is in site page") {
			Navigator.gotoPage(pageName = "Home");

			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_NAVIGATION_USER_PERSONAL_BAR_PORTLET");
		}

		task ("The Applications Menu icon and User Avatar icon buttons are located in Control Menu when user is in application admin") {
			PagesAdmin.openPagesAdmin(siteURLKey = "guest");

			WaitForPageLoad();

			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_CONTROL_MENU");

			Site.openSitesAdmin();

			WaitForPageLoad();

			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_CONTROL_MENU");
		}

		task ("The Applications Menu icon is not shown but User Avatar icon is located in Nav Bar when user is in page editor") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Test Content Page Name",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Content Page Name",
				siteName = "Guest");

			AssertElementNotPresent(locator1 = "ApplicationsMenu#TOGGLE");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_NAVIGATION_USER_PERSONAL_BAR_PORTLET");
		}

		task ("The Applications Menu icon is located in Control Menu but User Avatar icon is located in Nav Bar when user is in Staging site page and Live site page.") {
			JSONGroup.addGroup(groupName = "Test Site Name");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");

			Staging.openStagingAdmin(siteURLKey = "test-site-name");

			Staging.activateStagingCP(siteName = "Test Site Name");

			Navigator.gotoStagedSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_NAVIGATION_USER_PERSONAL_BAR_PORTLET");

			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");

			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IN_NAVIGATION_USER_PERSONAL_BAR_PORTLET");
		}
	}

	@description = "This is a use case for LPS-115218, LPS-112994 and LPS-112992. Both Applications and Control Panel categories are shown in Product Menu when disable Applications Menu in default instance."
	@priority = "5"
	@uitest
	test ViewProductMenuWhenDisableApplicationsMenuInDefaultInstance {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "ApplicationsMenu#ViewProductMenuWhenDisableApplicationsMenuInDefaultInstance";

		task ("Assert Applications Menu icon is shown in Control Menu by default") {
			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");
		}

		task ("Disable the Applications Menu") {
			PortalSettings.disableApplicationsMenu();
		}

		task ("Assert Applications and Control Panel are shown in Product Menu panel") {
			ProductMenuHelper.openProductMenu();

			AssertElementPresent(
				key_panel = "applications_menu-applications",
				locator1 = "ProductMenu#PANEL_COLLAPSED");

			AssertElementPresent(
				key_panel = "control_panel",
				locator1 = "ProductMenu#PANEL_COLLAPSED");
		}

		task ("Navigate to Asset Libraries admin via Product Menu panel") {
			ProductMenu.gotoPortletWhenDisableApplicationsMenu(
				category = "Content",
				panel = "Applications Menu-Applications",
				portlet = "Asset Libraries");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Asset Libraries");
		}

		task ("Navigate to Sites admin via Product Menu panel") {
			ProductMenu.gotoPortletWhenDisableApplicationsMenu(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Sites");
		}

		task ("Enable the Applications Menu") {
			PortalSettings.enableApplicationsMenu();
		}
	}

	@description = "This is a use case for LPS-115218. Both Applications and Control Panel categories are shown in Product Menu when disable Applications Menu in virtual instance."
	@priority = "4"
	@uitest
	test ViewProductMenuWhenDisableApplicationsMenuInVirtualInstance {
		property test.name.skip.portal.instance = "ApplicationsMenu#ViewProductMenuWhenDisableApplicationsMenuInVirtualInstance";

		task ("Add a virtual instance") {
			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.able.com",
				portalInstanceId = "www.able.com",
				virtualHost = "www.able.com");
		}

		task ("Sign In virtual instance") {
			User.firstLoginPG(
				password = "test",
				portalInstanceName = "www.able.com",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("Assert Applications Menu icon is shown in Control Menu by default") {
			AssertElementPresent(locator1 = "ControlMenu#APPLICATIONS_MENU_ICON");
		}

		task ("Disable the Applications Menu") {
			PortalSettings.disableApplicationsMenu();
		}

		task ("Assert Applications and Control Panel are shown in Product Menu panel") {
			ProductMenuHelper.openProductMenu();

			AssertElementPresent(
				key_panel = "applications_menu-applications",
				locator1 = "ProductMenu#PANEL_COLLAPSED");

			AssertElementPresent(
				key_panel = "control_panel",
				locator1 = "ProductMenu#PANEL_COLLAPSED");
		}

		task ("Navigate to Asset Libraries admin via Product Menu panel") {
			ProductMenu.gotoPortletWhenDisableApplicationsMenu(
				category = "Content",
				panel = "Applications Menu-Applications",
				portlet = "Asset Libraries");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Asset Libraries");
		}

		task ("Navigate to Sites admin via Product Menu panel") {
			ProductMenu.gotoPortletWhenDisableApplicationsMenu(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Sites");
		}

		task ("Enable the Applications Menu") {
			PortalSettings.enableApplicationsMenu();
		}
	}

}