@component-name = "portal-collaboration"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Asset Sharing";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site");

		JSONLayout.addPublicLayout(
			groupName = "Test Site",
			layoutName = "Test Page");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");
	}

	tearDown {
		JSONGroup.deleteGroupByName(groupName = "Test Site");

		JSONUser.tearDownNonAdminUsers();
	}

	@description = "This test ensures that Sharing can be disabled at the instance level."
	@priority = "4"
	@refactordone
	test CanDisableSharingAtInstanceScope {
		property test.name.skip.portal.instance = "SharingUsecase#CanDisableSharingAtInstanceScope";

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Sharing",
			configurationName = "Sharing",
			configurationScope = "Virtual Instance Scope");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Test Site",
			layoutName = "Test Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		DMDocument.enableActionsMenuOnPortlet();

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "Document with sharing disabled",
			groupName = "Test Site",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs with sharing disabled",
			groupName = "Test Site");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		LexiconEntry.viewNoEntryMenuItem(
			menuItem = "Share",
			rowEntry = "Document with sharing disabled");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document with sharing disabled");

		AssertElementNotPresent(
			key_text = "Share",
			locator1 = "Button#ANY");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "test-site");

		LexiconEntry.viewNoEntryMenuItem(
			menuItem = "Share",
			rowEntry = "Blogs with sharing disabled");
	}

	@description = "This test ensures that Sharing can be disabled at the system level."
	@priority = "4"
	@refactordone
	test CanDisableSharingAtSystemScope {
		property test.name.skip.portal.instance = "SharingUsecase#CanDisableSharingAtSystemScope";

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Sharing",
			configurationName = "Sharing",
			configurationScope = "System Scope");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Test Site",
			layoutName = "Test Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		DMDocument.enableActionsMenuOnPortlet();

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "Document with sharing disabled",
			groupName = "Test Site",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs with sharing disabled",
			groupName = "Test Site");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		LexiconEntry.viewNoEntryMenuItem(
			menuItem = "Share",
			rowEntry = "Document with sharing disabled");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document with sharing disabled");

		AssertElementNotPresent(
			key_text = "Share",
			locator1 = "Button#ANY");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "test-site");

		LexiconEntry.viewNoEntryMenuItem(
			menuItem = "Share",
			rowEntry = "Blogs with sharing disabled");
	}

	@description = "This test ensures that users can Filter By AssetType in the Shared Content app."
	@priority = "3"
	@refactordone
	test CanFilterByAssetType {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site",
			layoutName = "Test Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		DMDocument.enableActionsMenuOnPortlet();

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Site",
			guestPermissions = "false",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			groupName = "Test Site");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "test-site");

		BlogsNavigator.gotoShare(entryTitle = "Blogs Entry Title");

		Asset.share(
			sharingPermissions = "View",
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Asset.openTosharedContent(
			navTab = "Shared with Me",
			siteURLKey = "guest");

		Asset.setFilterAndOrder(
			assetType = "Document",
			filterBy = "Asset Types");

		LexiconEntry.viewEntryName(rowEntry = "DM Document Title");

		LexiconEntry.viewNoEntry(rowEntry = "Blogs Entry Title");

		Asset.setFilterAndOrder(
			assetType = "Blogs Entry",
			filterBy = "Asset Types",
			restoreFilter = "true");

		LexiconEntry.viewEntryName(rowEntry = "Blogs Entry Title");

		LexiconEntry.viewNoEntry(rowEntry = "DM Document Title");
	}

	@description = "This test ensures that users can Order By Shared Date in the Shared Content app."
	@priority = "3"
	@refactordone
	test CanOrderBySharedDate {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site",
			layoutName = "Test Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site");

		DMDocument.enableActionsMenuOnPortlet();

		for (var num : list "1,2") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "DM Document Title${num}",
				groupName = "Test Site",
				guestPermissions = "false",
				mimeType = "application/msword",
				sourceFileName = "Document_${num}.doc");

			Navigator.gotoSitePage(
				pageName = "Test Page",
				siteName = "Test Site");

			DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title${num}");

			DMDocument.sharePG(
				userEmailAddress = "userea@liferay.com",
				userName = "userfn userln");
		}

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			groupName = "Test Site");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "test-site");

		BlogsNavigator.gotoShare(entryTitle = "Blogs Entry Title");

		Asset.share(
			sharingPermissions = "View",
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Asset.openTosharedContent(
			navTab = "Shared with Me",
			siteURLKey = "guest");

		ManagementBar.setFilterAndOrder(orderBy = "Shared Date");

		Click.clickNoMouseOver(
			key_order = "list-up",
			locator1 = "ManagementBar#ORDER_ICON_SPECIFIC");

		AssertElementPresent(
			key_contentTitle = "Blogs Entry Title",
			locator1 = "Sharing#SHARED_CONTENT_CONTENT_TITLE");

		AssertElementPresent(
			key_contentTitle = "DM Document Title2",
			locator1 = "Sharing#SHARED_CONTENT_CONTENT_TITLE_2");

		AssertElementPresent(
			key_contentTitle = "DM Document Title1",
			locator1 = "Sharing#SHARED_CONTENT_CONTENT_TITLE_3");
	}

}