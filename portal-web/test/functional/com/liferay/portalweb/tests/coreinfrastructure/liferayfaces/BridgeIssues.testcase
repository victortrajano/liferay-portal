@component-name = "core-infrastructure"
definition {

	property liferay.faces = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Liferay Faces";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Bridge Issues");

		PagesAdmin.openPagesAdmin(siteURLKey = "Bridge Issues");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@priority = "3"
	test Faces1470And1478PortletSmoke {

		// FACES_1470

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-1470",
			portletName = "FACES-1470");

		BridgeIssues.navigateToDo(
			pageLink = "Navigate to view1.xhtml",
			urlAppend = "web/bridge-issues/faces-1470");

		BridgeIssues.navigateToDo(
			pageLink = "Back to as7LeakTracker.xhtml",
			urlAppend = "web/bridge-issues/faces-1470?p_p_id=FACES1470_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1470_WAR_comliferayfacesissuejsfportlet__facesViewIdRender=%2FWEB-INF%2Fviews%2FFACES-1470%2Fview1.xhtml");

		BridgeIssues.navigateToDo(
			pageLink = "Refresh AS7Leak List",
			urlAppend = "web/bridge-issues/faces-1470");

		AssertElementPresent(locator1 = "BridgeIssues#AS7LEAKTRACKER");

		BridgeIssues.navigateToDo(
			pageLink = "Click me to navigate to view2.xhtml via Ajax",
			urlAppend = "web/bridge-issues/faces-1470?p_p_id=FACES1470_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1470_WAR_comliferayfacesissuejsfportlet__facesViewIdRender=%2FWEB-INF%2Fviews%2FFACES-1470%2Fview1.xhtml");

		Click(
			key_pageLink = "Click me to navigate to view1.xhtml via Ajax",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		BridgeIssues.navigateToDo(
			pageLink = "Refresh AS7Leak List",
			urlAppend = "web/bridge-issues/faces-1470");

		AssertElementPresent(locator1 = "BridgeIssues#AS7LEAKTRACKER");

		BridgeIssues.navigateToDo(
			pageLink = "Click me to navigate to view2.xhtml via non-Ajax (full postback)",
			urlAppend = "web/bridge-issues/faces-1470?p_p_id=FACES1470_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1470_WAR_comliferayfacesissuejsfportlet__facesViewIdRender=%2FWEB-INF%2Fviews%2FFACES-1470%2Fview1.xhtml");

		Click(
			key_pageLink = "Click me to navigate to view1.xhtml via non-Ajax (full postback)",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		BridgeIssues.navigateToDo(
			pageLink = "Refresh AS7Leak List",
			urlAppend = "web/bridge-issues/faces-1470");

		AssertElementPresent(locator1 = "BridgeIssues#AS7LEAKTRACKER");

		BridgeIssues.navigateToDo(
			pageLink = "Click me to navigate to view2.xhtml via Ajax",
			urlAppend = "web/bridge-issues/faces-1470?p_p_id=FACES1470_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1470_WAR_comliferayfacesissuejsfportlet__facesViewIdRender=%2FWEB-INF%2Fviews%2FFACES-1470%2Fview1.xhtml");

		Click(
			key_pageLink = "Click me to navigate to view1.xhtml via non-Ajax (full postback)",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		BridgeIssues.navigateToDo(
			pageLink = "Refresh AS7Leak List",
			urlAppend = "web/bridge-issues/faces-1470");

		AssertElementPresent(locator1 = "BridgeIssues#AS7LEAKTRACKER");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-1470?p_p_id=FACES1470_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1470_WAR_comliferayfacesissuejsfportlet__facesViewIdRender=%2FWEB-INF%2Fviews%2FFACES-1470%2Fview1.xhtml");

		UserBar.signOut();

		BridgeIssues.navigateToDo(
			pageLink = "Refresh AS7Leak List",
			urlAppend = "web/bridge-issues/faces-1470");

		AssertElementPresent(locator1 = "BridgeIssues#AS7LEAKTRACKER");

		// Click the Perform Garbage Collection button and confirm that no AS7Leak class instances appear

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		// FACES-1478

		PagesAdmin.openPagesAdmin(siteURLKey = "Bridge Issues");

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-1478",
			portletName = "FACES-1478");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-1478");

		var portalURL = PropsUtil.get("portal.url");

		AssertTextEquals(
			locator1 = "BridgeIssues#URL_MESSAGE",
			value1 = "${portalURL}/web/bridge-issues/faces-1478?p_p_id=FACES1478_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=foo&_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=bar");

		Click(
			key_pageLink = "should be the same as the href attribute of this link",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		AssertLocation(value1 = "${portalURL}/web/bridge-issues/faces-1478?p_p_id=FACES1478_WAR_comliferayfacesissuejsfportlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=foo&_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=bar");

		AssertTextEquals(
			locator1 = "BridgeIssues#PARAM_URL1",
			value1 = "_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=foo");

		AssertTextEquals(
			locator1 = "BridgeIssues#PARAM_URL2",
			value1 = "_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=bar");

		AssertLocation.assertPartialLocation(value1 = "_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=foo");

		AssertLocation.assertPartialLocation(value1 = "_FACES1478_WAR_comliferayfacesissuejsfportlet_testParam=bar");
	}

	@priority = "3"
	test Faces1618And1638PortletSmoke {

		// FACES-1618

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-1618",
			portletName = "FACES-1618");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-1618");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE_SIZE",
			value1 = "2");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE",
			value1 = "FACES-1618:example.css");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE2",
			value1 = "javax.faces:jsf.js");

		Click(
			key_pageLink = "go to next view with immediate=",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE_SIZE",
			value1 = "3");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE",
			value1 = "FACES-1618:example.css");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE2",
			value1 = "FACES-1618:example.js");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE3",
			value1 = "javax.faces:jsf.js");

		Click(
			key_pageLink = "go to previous view with immediate=",
			locator1 = "BridgeIssues#NAVIGATE_TO_VIEW");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE",
			value1 = "FACES-1618:example.css");

		AssertTextEquals(
			locator1 = "BridgeIssues#RESOURCE2",
			value1 = "javax.faces:jsf.js");

		AssertElementNotPresent(locator1 = "BridgeIssues#RESOURCE3");

		// FACES-1638

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-1638",
			portletName = "FACES-1638");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-1638");

		for (var index : list "1,2") {
			BridgeIssues.verifyParam(
				liIndex = "1",
				paramLink = "First-Item",
				ulIndex = "${index}");

			BridgeIssues.verifyParam(
				liIndex = "1",
				paramValue = "1",
				ulIndex = "${index}");
		}

		for (var index : list "1,2") {
			BridgeIssues.verifyParam(
				liIndex = "2",
				paramLink = "Second-Item",
				ulIndex = "${index}");

			BridgeIssues.verifyParam(
				liIndex = "2",
				paramValue = "2",
				ulIndex = "${index}");
		}

		for (var index : list "1,2") {
			BridgeIssues.verifyParam(
				liIndex = "3",
				paramLink = "Third-Item",
				ulIndex = "${index}");

			BridgeIssues.verifyParam(
				liIndex = "3",
				paramValue = "3",
				ulIndex = "${index}");
		}
	}

	@priority = "3"
	test Faces1635And1433PortletSmoke {

		// FACES_1635Resources

		BridgeIssues.addPageAndPortlet(
			pageURL = "jsf-applicant?p_p_parallel=0",
			portletName = "jsf-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/jsf-applicant?p_p_parallel=0");

		Portlet.addPG(portletName = "primefaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/jsf-applicant?p_p_parallel=0");

		AssertElementPresent(locator1 = "BridgeIssues#LIFERAY_LOGO");

		AssertElementPresent(locator1 = "BridgeIssues#LIFERAY_LOGO_P");

		var key_blcount = "1";
		var key_bscount = "1";
		var key_hlcount = "1";
		var key_hscount = "1";

		while (IsElementPresent(locator1 = "BridgeIssues#HEAD_SCRIPT") && (maxIterations = "50")) {
			var key_hsrc = selenium.getAttribute("//head//script[${key_hscount}]@scr");

			AssertElementNotPresent(locator1 = "BridgeIssues#HEAD_SCRIPT_2");

			var key_hscount = ${key_hscount} + 1;
		}

		while (IsElementPresent(locator1 = "BridgeIssues#HEAD_LINK") && (maxIterations = "50")) {
			var key_hhref = selenium.getAttribute("//head//link[${key_hlcount}]@href");

			AssertElementNotPresent(locator1 = "BridgeIssues#HEAD_LINK_2");

			var key_hlcount = ${key_hlcount} + 1;
		}

		while (IsElementPresent(locator1 = "BridgeIssues#BODY_SCRIPT") && (maxIterations = "50")) {
			var key_bsrc = selenium.getAttribute("//body//script[${key_bscount}]@scr");

			AssertElementNotPresent(locator1 = "BridgeIssues#BODY_SCRIPT_2");

			var key_bscount = ${key_bscount} + 1;
		}

		while (IsElementPresent(locator1 = "BridgeIssues#BODY_LINK") && (maxIterations = "50")) {
			var key_bhref = selenium.getAttribute("//body//link[${key_blcount}]@href");

			AssertElementNotPresent(locator1 = "BridgeIssues#BODY_SCRIPT_2");

			var key_blcount = ${key_blcount} + 1;
		}

		// JSFSPEC-1433

		BridgeIssues.addPageAndPortlet(
			pageURL = "jsfspec-1433",
			portletName = "JSFSPEC-1433");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/jsfspec-1433");

		Click(
			key_pageLink = "Run Test",
			locator1 = "BridgeIssues#RUN_TEST_BUTTON");

		for (var key_field : list "1,2,3,4,5,6,7,8,9,10,11") {
			AssertElementPresent(locator1 = "BridgeIssues#REQUESTED_MESSAGE");
		}
	}

	@priority = "3"
	test FacesIssuesPortletSmoke {

		// FACES_224

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-224",
			portletName = "FACES-224");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-224");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#FACE_VIEW1_XHTML",
			value1 = "This is view1.xhtml");

		Click(locator1 = "BridgeIssues#FACE_VIEW2_BUTTON");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#FACE_VIEW1_XHTML",
			value1 = "This is view2.xhtml");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#VIEW_PARAM1",
			value1 = "abc");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#VIEW_PARAM_VALUE1",
			value1 = "viewParam1=abc");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#VIEW_PARAM2",
			value1 = "xyz");

		AssertElementPresent.assertVisible(
			locator1 = "BridgeIssues#VIEW_PARAM_VALUE2",
			value1 = "viewParam2=xyz");

		// FACES_257

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-257",
			portletName = "FACES-257");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-257");

		AssertElementPresent(locator1 = "BridgeIssues#REQUESTED_URL");

		BridgeIssues.urlParameters(
			alpha = "1",
			beta = "2",
			buttonName = "alpha=1 beta=2 gamma=0",
			gamma = "0",
			urlEnd = "/-/FACES-257/1/my-friendly-action/2");

		BridgeIssues.urlParameters(
			alpha = "1",
			beta = "2",
			buttonName = "alpha=1 beta=2 gamma=3",
			gamma = "3",
			urlEnd = "/-/FACES-257/1/my-friendly-action/2/3");

		BridgeIssues.urlParameters(
			alpha = "4",
			beta = "5",
			buttonName = "alpha=4 beta=5 gamma=0",
			gamma = "0",
			urlEnd = "/-/FACES-257/4/my-friendly-action/5");

		BridgeIssues.urlParameters(
			alpha = "4",
			beta = "5",
			buttonName = "alpha=4 beta=5 gamma=6",
			gamma = "6",
			urlEnd = "/-/FACES-257/4/my-friendly-action/5/6");

		// FACES_2958

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-2958",
			portletName = "FACES-2958");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-2958");

		for (var resourceActionIndex : list "link.xhtml,commandLinkAjax.xhtml,commandLinkNonAjax.xhtml,link.xhtml via Ajax,commandLinkAjax.xhtml via Ajax,commandLinkNonAjax.xhtml via Ajax") {
			BridgeIssues.verifyValue(
				detailValue = "All special URL characters were correctly encoded.",
				link = "${resourceActionIndex}",
				statusValue = "SUCCESS",
				textValue = "FACES-2958",
				toPageLink = "success.xhtml");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-2958");
		}

		for (var resourceActionIndex : list "resource.xhtml,resourceViaAjax.xhtml") {
			BridgeIssues.verifyValue(
				detailValue = "All special URL characters were correctly encoded.",
				link = "${resourceActionIndex}",
				restoreState = "true",
				statusValue = "SUCCESS",
				textValue = "FACES-2958");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-2958");
		}

		// FACES_3231

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3231",
			portletName = "FACES-3231");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3231");

		BridgeIssues.verifyValue(
			detailValue = "Successfully load html from head section template.",
			link = "Load html from head section template.",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "FACES-3231");

		// FACES_3300

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3300",
			portletName = "FACES-3300");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3300");

		for (var resourceActionIndex : list "1,2,3,4,5,6") {
			BridgeIssues.verifyValue(
				detailValue = "Successfully navigated to",
				statusValue = "SUCCESS",
				textValue = "FACES-3300",
				validURL = "${resourceActionIndex}");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3300");
		}

		for (var resourceActionIndex : list "1,2,3,4,5,6") {
			BridgeIssues.verifyValue(inValidURL = "${resourceActionIndex}");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3300");
		}

		// FACES_3356

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3356",
			portletName = "FACES-3356");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3356");

		BridgeIssues.verifyValue(
			detailValue = "Successfully handled",
			link = "To nonExistentView.xhtml",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "FACES-3356");

		// FACES_3404

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3404",
			portletName = "FACES-3404");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3404");

		for (var resourceActionIndex : list "result.xhtml via GET,result.xhtml via Ajax") {
			BridgeIssues.verifyValue(
				detailValue = "Liferay parameter was properly encoded in Render",
				link = "${resourceActionIndex}",
				restoreState = "true",
				statusValue = "SUCCESS",
				textValue = "FACES-3404");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3404");
		}

		// FACES_4340-workaround

		BridgeIssues.addPageAndPortlet(
			pageURL = "mojarra-4340-workaround",
			portletName = "MOJARRA-4340-workaround");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/mojarra-4340-workaround");

		BridgeIssues.verifyValue(
			detailValue = "Successfully loaded body script in Ajax request.",
			link = "result.xhtml",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "MOJARRA-4340-workaround");

		// FACES_4345-workaround

		BridgeIssues.addPageAndPortlet(
			pageURL = "mojarra-4345-workaround",
			portletName = "MOJARRA-4345-workaround");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/mojarra-4345-workaround");

		BridgeIssues.verifyValue(
			detailValue = "Resource URLs loaded via Ajax were not double escaped.",
			link = "result.xhtml",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "MOJARRA-4340-workaround");
	}

	@priority = "3"
	test PrimefacesIssuesSmoke {

		// FACES_1513_2185

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-1513-2185",
			portletName = "FACES-1513-2185");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-1513-2185");

		BridgeDemos.exportFile(lastName = "Export via p:dataExporter");

		// Only export files, no verification of file content

		BridgeDemos.exportFile(lastName = "Export via pe:exporter");

		BridgeDemos.exportFile(lastName = "Download via p:fileDownload");

		// FACES_2921

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-2921",
			portletName = "FACES-2921");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-2921");

		AssertElementPresent(locator1 = "BridgeIssues#RENDER_KITID");

		AssertElementPresent(
			key_attribute = "HTML_BASIC",
			locator1 = "BridgeIssues#HTML_BASIC");

		// FACES_3031

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3031",
			portletName = "FACES-3031");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3031");

		BridgeIssues.verifyValue(
			detailValue = "State successfully saved and restored.",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "FACES-3031");

		// FACES_3250

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3250",
			portletName = "FACES-3250");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3250");

		Click(locator1 = "BridgeIssues#CHOOSE_FILE_BUTTON");

		BridgeIssues.upload3250File(
			fileName = "Document_2.jpeg",
			instantAjax = "false");

		AssertElementPresent(locator1 = "BridgeIssues#FILE_NAME");

		Click(locator1 = "BridgeIssues#CHOOSE_FILE_BUTTON_2");

		BridgeIssues.upload3250File(
			fileName = "Document_2.jpeg",
			instantAjax = "true",
			submit = "skinSimple=false");

		Click(locator1 = "BridgeIssues#CHOOSE_FILE_BUTTON_3");

		BridgeIssues.upload3250File(
			fileName = "Document_2.jpeg",
			instantAjax = "true",
			submit = "skinSimple=true");

		// FACES_3327

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3327",
			portletName = "FACES-3327");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3327");

		BridgeIssues.verifyValue(
			detailValue = "Successfully navigated after exporting/downloading data from a PrimeFaces component.",
			restoreState = "true",
			statusValue = "SUCCESS",
			textValue = "FACES-3327");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3327");

		BridgeDemos.exportFile(lastName = "Export via p:dataExporter");

		// Only export files, no verification of file content

		BridgeDemos.exportFile(lastName = "Export via pe:exporter");

		BridgeDemos.exportFile(lastName = "Download via p:fileDownload");

		// FACES_3328

		JSONLayout.addPublicLayout(
			groupName = "Bridge Issues",
			layoutName = "FACES-3328-start");

		JSONLayout.addPublicLayout(
			groupName = "Bridge Issues",
			layoutName = "FACES-3328-end");

		BridgeIssues.addPageAndPortlet(
			pageURL = "faces-3328",
			portletName = "FACES-3328");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-issues/faces-3328-start");

		var portalURL = PropsUtil.get("portal.url");

		Click(locator1 = "//a[@href='${portalURL}/web/bridge-issues/faces-3328']");

		Click(locator1 = "BridgeIssues#CALENDA_TRIGGER_BUTTON");

		AssertElementPresent(locator1 = "BridgeIssues#CALENDA_TABLE");

		AssertElementPresent(locator1 = "BridgeIssues#CALENDA_DATEPICKER");

		AssertElementPresent(locator1 = "BridgeIssues#SELECT_ONE_MENU");

		Click(locator1 = "BridgeIssues#CALENDA_TRIGGER_BUTTON");

		BridgeIssues.select(textValue = "Item 2");

		Click(locator1 = "//a[@href='${portalURL}/web/bridge-issues/faces-3328-end']");

		AssertNotVisible(locator1 = "//table[contains(@class, 'ui-datepicker-calendar')]");

		AssertNotVisible(locator1 = "//*[contains(@id,'p_selectOneMenu')]");
	}

}