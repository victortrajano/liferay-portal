@component-name = "portal-lol"
definition {

	property database.types = "mysql";
	property liferay.online.properties = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "LOL";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Add the raylife virtual instance") {
			Navigator.openURL();

			HeadlessPortalInstanceAPI.addPortalInstanceWithVirtualInstanceInitializer(
				domain = "www.raylife.com",
				portalInstanceId = "www.raylife.com",
				siteInitializerKey = "com.liferay.site.initializer.raylife",
				virtualHost = "www.raylife.com");

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.raylife.com:8080",
				userEmailAddress = "test@raylife.com");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Verify if a virtual instance is created using the initializer, showing a different site comparing with the default Liferay bundle"
	@ignore = "Test Stub"
	@priority = "4"
	test CreateVirtualInstanceUsingInitializerWithSuccess {

		// TODO Create the automation about the bug LPS-139959

	}

	@description = "Delete Virtual Instance in Liferay Online"
	@ignore = "Test Stub"
	@priority = "4"
	test DeleteVirtualInstance {

		// TODO Create the automation about the bug LPS-140833.

	}

	@description = "Verify if a friendly error appears when the user is not able to create the virtual host"
	@ignore = "Test Stub"
	@priority = "3"
	test FriendlyErrorAppearsWhenTheUserCantCreateVirtualHost {

		// TODO Create the automation about the bug LPS-139960

	}

	@description = "Create Virtual instance using the Virtual Instance Initializer not works with the curl command."
	@ignore = "Test Stub"
	@priority = "4"
	test UserCanCreateVirtualInstance {

		// TODO Create the automation about the the bug LPS-140302.

	}

}