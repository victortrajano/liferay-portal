@component-name = "portal-upgrades"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Fragments,Upgrades WEM";
	property testray.main.component.name = "Upgrades WEM";

	setUp {
		SignIn.signIn();

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation(value1 = "${portalURL}/web/guest?SM_USER=test@liferay.com");

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LPS-120693."
	@priority = "3"
	test ConfigureContainerStylesAfterUpgrade721 {
		property data.archive.type = "data-archive-section-with-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		task ("View fragments shown in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Fragment Content Page",
				siteName = "Test Site Name");

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "Heading Example");

			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "card",
				text = "Card Title Example");
		}

		task ("View the outer Container styles in edit mode") {
			ContentPages.gotoPageEditor();

			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fluid",
				position = "1");
		}

		task ("Configure the outer Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Center",
				contentDisplay = "Flex Row",
				justifyContent = "Center",
				panel = "Styles");
		}

		task ("View the outer Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "center",
				containerWidth = "Fluid",
				contentDisplay = "row",
				justifyContent = "center",
				position = "1");
		}

		task ("Configure the outer Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "End",
				contentDisplay = "Flex Column",
				justifyContent = "Between",
				panel = "Styles");
		}

		task ("View the outer Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "end",
				containerWidth = "Fluid",
				contentDisplay = "column",
				justifyContent = "between",
				position = "1");
		}

		task ("View the inner Container styles in edit mode") {
			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "2",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fixed Width",
				position = "2");
		}

		task ("Configure the inner Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Start",
				contentDisplay = "Flex Row",
				justifyContent = "End",
				panel = "Styles",
				position = "2");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "start",
				containerWidth = "Fixed Width",
				contentDisplay = "row",
				justifyContent = "end",
				position = "2");
		}

		task ("Configure the inner Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "Baseline",
				contentDisplay = "Flex Column",
				justifyContent = "Around",
				panel = "Styles",
				position = "2");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "baseline",
				containerWidth = "Fixed Width",
				contentDisplay = "column",
				justifyContent = "around",
				position = "2");
		}
	}

	@description = "This is a use case for LPS-120693."
	@priority = "3"
	test ConfigureContainerStylesAfterUpgrade735 {
		property data.archive.type = "data-archive-container-with-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.5";

		task ("View fragments shown in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Fragment Content Page",
				siteName = "Test Site Name");

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "Heading Example");

			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "card",
				text = "Card Title Example");
		}

		task ("View the Container styles in edit mode") {
			ContentPages.gotoPageEditor();

			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fluid",
				position = "1");
		}

		task ("Configure the Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Center",
				contentDisplay = "Flex Row",
				justifyContent = "Center",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "center",
				containerWidth = "Fluid",
				contentDisplay = "row",
				justifyContent = "center",
				position = "1");
		}

		task ("Configure the Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "End",
				contentDisplay = "Flex Column",
				justifyContent = "Between",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "end",
				containerWidth = "Fluid",
				contentDisplay = "column",
				justifyContent = "between",
				position = "1");
		}

		task ("Configure the Container to Fixed Width and Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Start",
				containerWidth = "Fixed Width",
				contentDisplay = "Flex Row",
				justifyContent = "End",
				panel = "Styles");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "start",
				containerWidth = "Fixed Width",
				contentDisplay = "row",
				justifyContent = "end",
				position = "1");
		}

		task ("Configure the Fixed Width Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "Baseline",
				contentDisplay = "Flex Column",
				justifyContent = "Around",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "baseline",
				containerWidth = "Fixed Width",
				contentDisplay = "column",
				justifyContent = "around",
				position = "1");
		}
	}

	@description = "This is a use case for LPS-120693."
	@priority = "3"
	test ConfigureContainerStylesAfterUpgrade72104 {
		property data.archive.type = "data-archive-section-with-fragments";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.2.10.4";

		task ("View fragments shown in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Fragment Content Page",
				siteName = "Test Site Name");

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "Heading Example");

			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "card",
				text = "Card Title Example");
		}

		task ("View the outer Container styles in edit mode") {
			ContentPages.gotoPageEditor();

			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fluid",
				position = "1");
		}

		task ("Configure the outer Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Center",
				contentDisplay = "Flex Row",
				justifyContent = "Center",
				panel = "Styles");
		}

		task ("View the outer Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "center",
				containerWidth = "Fluid",
				contentDisplay = "row",
				justifyContent = "center",
				position = "1");
		}

		task ("Configure the outer Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "End",
				contentDisplay = "Flex Column",
				justifyContent = "Between",
				panel = "Styles");
		}

		task ("View the outer Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "end",
				containerWidth = "Fluid",
				contentDisplay = "column",
				justifyContent = "between",
				position = "1");
		}

		task ("View the inner Container styles in edit mode") {
			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "2",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fixed Width",
				position = "2");
		}

		task ("Configure the inner Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Start",
				contentDisplay = "Flex Row",
				justifyContent = "End",
				panel = "Styles",
				position = "2");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "start",
				containerWidth = "Fixed Width",
				contentDisplay = "row",
				justifyContent = "end",
				position = "2");
		}

		task ("Configure the inner Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "Baseline",
				contentDisplay = "Flex Column",
				justifyContent = "Around",
				panel = "Styles",
				position = "2");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "baseline",
				containerWidth = "Fixed Width",
				contentDisplay = "column",
				justifyContent = "around",
				position = "2");
		}
	}

	@description = "This is a use case for LPS-120693."
	@priority = "3"
	test ConfigureContainerStylesAfterUpgrade73101 {
		property data.archive.type = "data-archive-container-with-fragments";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.3.10.1";

		task ("View fragments shown in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Fragment Content Page",
				siteName = "Test Site Name");

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "Heading Example");

			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "card",
				text = "Card Title Example");
		}

		task ("View the Container styles in edit mode") {
			ContentPages.gotoPageEditor();

			AssertElementNotPresent(
				key_contentDisplay = "",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");

			PageEditor.viewContainerStyle(
				containerWidth = "Fluid",
				position = "1");
		}

		task ("Configure the Container to Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Center",
				contentDisplay = "Flex Row",
				justifyContent = "Center",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "center",
				containerWidth = "Fluid",
				contentDisplay = "row",
				justifyContent = "center",
				position = "1");
		}

		task ("Configure the Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "End",
				contentDisplay = "Flex Column",
				justifyContent = "Between",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "end",
				containerWidth = "Fluid",
				contentDisplay = "column",
				justifyContent = "between",
				position = "1");
		}

		task ("Configure the Container to Fixed Width and Flex Row") {
			PageEditor.editLayoutContainer(
				alignItems = "Start",
				containerWidth = "Fixed Width",
				contentDisplay = "Flex Row",
				justifyContent = "End",
				panel = "Styles");
		}

		task ("View the inner Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "start",
				containerWidth = "Fixed Width",
				contentDisplay = "row",
				justifyContent = "end",
				position = "1");
		}

		task ("Configure the Fixed Width Container to Flex Column") {
			PageEditor.editLayoutContainer(
				alignItems = "Baseline",
				contentDisplay = "Flex Column",
				justifyContent = "Around",
				panel = "Styles");
		}

		task ("View the Container styles") {
			PageEditor.viewContainerStyle(
				alignItems = "baseline",
				containerWidth = "Fixed Width",
				contentDisplay = "column",
				justifyContent = "around",
				position = "1");
		}
	}

}