@component-name = "data-engine"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Data Engine";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-107630. Make sure Fieldsets can be duplicated"
	@priority = "5"
	test DuplicateFieldset {
		DataEngine.addFields(fieldNameList = "Text,Image,Upload");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentStructures.addCP(structureName = "WC Structure Name Duplicate");

		DataEngine.addFieldsetToBuilder(fieldsetName = "WC Structure Name");

		DataEngine.duplicate(fieldsetLabel = "WC Structure Name");

		AssertElementPresent(
			key_fieldsetLabel = "Copy of WC Structure Name",
			locator1 = "DDMEditStructure#FORM_FIELD_SETS_CONTAINER_LABEL");

		for (var fieldLabelList : list "Copy of Text,Copy of Image,Copy of Upload") {
			AssertElementPresent(
				key_fieldFieldLabel = "${fieldLabelList}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name Duplicate");
	}

	@description = "This is a test for LPS-107630. Make sure the Fieldset does not crash when editing its properties directly from Object sidebar during reuse in a new form view"
	@priority = "4"
	test EditFieldsetPropertiesFromSideBar {
		DataEngine.createNewFieldset(
			fieldNameList = "Text",
			fieldsetName = "New Fieldset");

		DataEngine.addFieldsetToBuilder(fieldsetName = "New Fieldset");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Text",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		DataEngine.gotoFieldsetItemEllipsis(fieldsetName = "New Fieldset");

		MenuItem.click(menuItem = "Edit");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Text Edit",
			fieldsetModal = "true");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text Edit",
			fieldHelp = "Edited Help Text",
			fieldsetModal = "true");

		Modal.save();

		FormViewBuilder.propagateChange();

		Alert.viewSuccessMessage();

		AssertVisible(
			key_fieldFieldLabel = "Text Edit",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertVisible(
			key_helpText = "Edited Help Text",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_HELP_TEXT");

		Button.clickSave();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Text Edit",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertVisible(
			key_helpText = "Edited Help Text",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_HELP_TEXT");
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@priority = "5"
	test FieldsetNameRenamedWhenNameAlreadyExistent {
		var textValue = "Text";
		var numericValue = "Numeric";
		var structureTitle = "WC Structure Name";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "${structureTitle}");

		DataEngine.addField(
			fieldFieldLabel = "${textValue}",
			fieldName = "${textValue}");

		DataEngine.editFieldReference(
			assertFieldReference = "${textValue}",
			fieldFieldLabel = "${textValue}",
			fieldReference = "${textValue}");

		DataEngine.addField(
			fieldFieldLabel = "${numericValue}",
			fieldName = "${numericValue}");

		DataEngine.editFieldReference(
			assertFieldReference = "${textValue}",
			fieldFieldLabel = "${numericValue}",
			fieldReference = "${textValue}");

		WebContentStructures.saveCP(structureName = "${structureTitle}");

		WebContentNavigator.gotoEditStructure(structureName = "${structureTitle}");

		AssertClick.assertPartialTextClickAt(
			key_fieldFieldLabel = "${numericValue}",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER",
			value1 = "${numericValue}");

		Navigator.gotoNavTab(navTab = "Advanced");

		AssertTextNotEquals(
			key_fieldLabel = "Field Reference",
			key_fieldName = "fieldReference",
			locator1 = "Sidebar#TEXT_INPUT",
			value1 = "${textValue}");
	}

	@description = "This is a test for LPS-107630. Make sure Fieldsets can be set as collapsible"
	@priority = "4"
	test FieldsetSetAsCollapsible {
		DataEngine.createNewFieldset(
			fieldNameList = "Numeric",
			fieldsetName = "New Fieldset");

		DataEngine.addFieldsetToBuilder(fieldsetName = "New Fieldset");

		DataEngine.editCollapsible(
			collapsible = "true",
			fieldsetLabel = "New Fieldset");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Numeric",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		Click(
			key_label = "New Fieldset",
			locator1 = "DDMEditStructure#FORM_COLLAPSE_BUTTON");

		AssertNotVisible(
			key_fieldFieldLabel = "Numeric",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
	}

	@description = "This is a test for LPS-107630. Make sure Fieldsets can be set as repeatable"
	@priority = "4"
	test FieldsetSetAsRepeatable {
		DataEngine.createNewFieldset(
			fieldNameList = "Rich Text",
			fieldsetName = "New Fieldset");

		DataEngine.addFieldsetToBuilder(fieldsetName = "New Fieldset");

		DataEngine.toggleFieldRepeatable(fieldsetLabel = "New Fieldset");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		NavItem.gotoWebContent();

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(webContentTitle = "Web Content Title");

		DataEngine.addRepeatableField(fieldLabel = "New Fieldset");

		for (var n : list "1,2") {
			DataEngine.assertFieldRepeated(
				fieldName = "FieldsGroup",
				index = "${n}");
		}

		AssertElementNotPresent(
			key_fieldName = "FieldsGroup",
			key_index = "1",
			locator1 = "FormFields#FIELD_REMOVE");

		AssertVisible(
			key_fieldName = "FieldsGroup",
			key_index = "2",
			locator1 = "FormFields#FIELD_REMOVE");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		for (var n : list "1,2") {
			DataEngine.assertFieldRepeated(
				fieldName = "FieldsGroup",
				index = "${n}");
		}

		AssertElementNotPresent(
			key_fieldName = "FieldsGroup",
			key_index = "1",
			locator1 = "FormFields#FIELD_REMOVE");

		AssertVisible(
			key_fieldName = "FieldsGroup",
			key_index = "2",
			locator1 = "FormFields#FIELD_REMOVE");
	}

	@description = "This is a test for LPS-107630. Make sure the content is not duplicated when activating repeatable option on a Web Content"
	@priority = "4"
	test RepeatFieldsetWithoutDuplicatingContent {
		DataEngine.addFieldsetToBuilder(fieldsetName = "Basic Web Content");

		DataEngine.toggleFieldRepeatable(fieldsetLabel = "Basic Web Content");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title");

		DataEngine.addRepeatableField(fieldLabel = "Basic Web Content");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "Web Content Content");

		SelectFrame(value1 = "relative=top");

		SelectFrame.selectFrameNoLoading(
			index = "2",
			key_fieldLabel = "content",
			locator1 = "CKEditor#ANY_BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "");
	}

	@description = "This is a test for LPS-107630. Make sure Fieldset Label can be shown or hidden"
	@priority = "4"
	test ShowAndHideFieldsetLabel {
		DataEngine.createNewFieldset(
			fieldNameList = "Date",
			fieldsetName = "New Fieldset");

		DataEngine.addFieldsetToBuilder(fieldsetName = "New Fieldset");

		DataEngine.toggleShowLabel(fieldLabel = "New Fieldset");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		DataEngine.assertFieldNotPresent(fieldsetLabel = "New Fieldset");

		DataEngine.toggleShowLabel(hiddenFieldLabel = "New Fieldset");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		DataEngine.viewFieldset(
			fieldNameList = "Date",
			fieldsetName = "New Fieldset");
	}

	@description = "This is a test for LPS-123538. As Content Creator, I cannot edit fieldset on the Advanced panel"
	@priority = "4"
	test VerifyFieldsetCannotBeEditedOnStructureBuilder {
		DataEngine.createNewFieldset(
			fieldNameList = "Date",
			fieldsetName = "New Fieldset");

		DataEngine.addFieldsetToBuilder(fieldsetName = "New Fieldset");

		Click(
			key_fieldsetLabel = "New Fieldset",
			locator1 = "DDMEditStructure#FORM_FIELD_SETS_CONTAINER_LABEL");

		AssertVisible(
			key_tab = "Basic",
			locator1 = "NavTab#ACTIVE_TAB_LINK");

		AssertElementNotPresent(
			key_tab = "Advanced",
			locator1 = "NavTab#ACTIVE_TAB_LINK");
	}

}