@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			Site.tearDownCP();

			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This test asserts that no document shows in FTP mode after deleting it in a depot."
	@priority = "5"
	@refactordone
	test CanNotViewDocumentAfterDeleting {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document PDF",
			groupName = "Test Depot Name");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document PDF");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document PDF");

		Depot.viewNoDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document PDF");
	}

	@description = "This test asserts that Not Found error returns when visiting FTP mode if indexing is disabled."
	@priority = "5"
	@refactordone
	test CanNotViewDocumentWhenDisabled {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.viewDepotConfiguration(
			configuration = "disabled",
			toggleSwitchLabel = "Enable Directory Indexing");

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/documents/test depot name");

		AssertTextEquals(
			locator1 = "Home#ERROR_MESSAGE_ALERT_ERROR",
			value1 = "Not Found");
	}

	@description = "This test asserts that a document without guest permissions in a depot can not be accessed from FTP mode."
	@priority = "4"
	@refactordone
	test CanNotViewDocumentWithoutPermissions {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.doc",
			groupName = "Test Depot Name",
			guestPermissions = "false",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "Document_1.doc");

		Navigator.openURL();

		User.logoutPG();

		Depot.viewNoDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "Document_1.doc");

		User.loginPG();
	}

	@description = "This test asserts that the approved document in a depot can be accessed from FTP mode."
	@priority = "4"
	@refactordone
	test CanViewApprovedDocument {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.xls",
			dmDocumentTitle = "DM Document XLS");

		Depot.viewNoDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document XLS",
			dmFolderName = "DM Folder Name");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "DM Document XLS",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "DM Document XLS",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document XLS",
			dmFolderName = "DM Folder Name");
	}

	@description = "This test asserts that a document stored in a depot can be accessed from FTP mode."
	@priority = "5"
	@refactordone
	test CanViewDocument {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		Depot.viewDepotConfiguration(
			configuration = "enabled",
			toggleSwitchLabel = "Enable Directory Indexing");

		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document JPG",
			groupName = "Test Depot Name");

		DepotNavigator.openToDMEntryInDepot(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document JPG");

		DMDocument.viewCP(dmDocumentTitle = "DM Document JPG");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document JPG");
	}

	@description = "This test asserts that an edited document stored in a depot can be accessed from FTP mode."
	@priority = "5"
	@refactordone
	test CanViewDocumentAfterEditing {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document TXT",
			groupName = "Test Depot Name");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document TXT");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.editCP(
			dmDocumentTitle = "DM Document TXT",
			dmDocumentTitleEdit = "DM Document TXT Edit");

		DepotNavigator.openToDMEntryInDepot(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document TXT Edit");

		DMDocument.viewCP(dmDocumentTitle = "DM Document TXT Edit");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document TXT Edit");
	}

	@description = "This test asserts that a document in a folder stored in a depot can be accessed from FTP mode."
	@priority = "5"
	@refactordone
	test CanViewDocumentInFolder {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document DOC",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openToDMEntryInDepot(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document DOC",
			folderName = "DM Folder Name");

		DMDocument.viewCP(dmDocumentTitle = "DM Document DOC");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document DOC",
			dmFolderName = "DM Folder Name");
	}

	@description = "This test asserts that a document with escape characters stored in a depot can be accessed from FTP mode."
	@priority = "3"
	@refactordone
	test CanViewDocumentWithEscapeCharacters {
		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Panel.expandPanel(panel = "Documents and Media");

		Depot.configureDirectoryIndexing(directoryIndexing = "Enabled");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "& < > DM Document");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		Depot.viewDocumentInFTP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "& < > DM Document");
	}

}