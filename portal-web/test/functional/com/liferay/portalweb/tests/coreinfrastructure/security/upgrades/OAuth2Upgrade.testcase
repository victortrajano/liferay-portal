@component-name = "portal-upgrades"
definition {

	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "OAuth 2";
	property testray.main.component.name = "Upgrades Security";

	setUp {
		SignIn.signIn();

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LRQA-61554. Login to instance and verify OAuth 2 works after upgrade from 7.1.3"
	@priority = "5"
	test ViewOAuth2ApplicationInInstanceLevelAfterUpgrade713 {
		property data.archive.type = "data-archive-oauth2-instance-level";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		task ("Login at able.com") {
			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin(baseURL = "http://www.able.com:8080");

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Instance Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Instance Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Login to instance and verify OAuth 2 works after upgrade from 7.2.0"
	@priority = "5"
	test ViewOAuth2ApplicationInInstanceLevelAfterUpgrade720 {
		property data.archive.type = "data-archive-oauth2-instance-level";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.0";

		task ("Login at able.com") {
			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin(baseURL = "http://www.able.com:8080");

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Instance Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Instance Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Login to instance and verify OAuth 2 works after upgrade from 7.1.10.3"
	@priority = "5"
	test ViewOAuth2ApplicationInInstanceLevelAfterUpgrade71103 {
		property data.archive.type = "data-archive-oauth2-instance-level";
		property portal.version = "7.1.10.3";

		task ("Login at able.com") {
			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin(baseURL = "http://www.able.com:8080");

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Instance Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Instance Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Login to instance and verify OAuth 2 works after upgrade from 7.2.10.1"
	@priority = "5"
	test ViewOAuth2ApplicationInInstanceLevelAfterUpgrade72101 {
		property data.archive.type = "data-archive-oauth2-instance-level";
		property portal.version = "7.2.10.1";

		task ("Login at able.com") {
			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin(baseURL = "http://www.able.com:8080");

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Instance Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Instance Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Verify OAuth 2 works at the system level after upgrade from 7.1.3"
	@priority = "5"
	test ViewOAuth2ApplicationInSystemLevelAfterUpgrade713 {
		property data.archive.type = "data-archive-oauth2-system-level";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin();

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Verify OAuth 2 works at the system level after upgrade from 7.2.0"
	@priority = "5"
	test ViewOAuth2ApplicationInSystemLevelAfterUpgrade720 {
		property data.archive.type = "data-archive-oauth2-system-level";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.0";

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin();

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Verify OAuth 2 works at the system level after upgrade from 7.1.10.3"
	@priority = "5"
	test ViewOAuth2ApplicationInSystemLevelAfterUpgrade71103 {
		property data.archive.type = "data-archive-oauth2-system-level";
		property portal.version = "7.1.10.3";

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin();

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

	@description = "This is a use case for LRQA-61554. Verify OAuth 2 works at the system level after upgrade from 7.2.10.1"
	@priority = "5"
	test ViewOAuth2ApplicationInSystemLevelAfterUpgrade72101 {
		property data.archive.type = "data-archive-oauth2-system-level";
		property portal.version = "7.2.10.1";

		task ("View OAuth2 application information") {
			OAuth2.openOAuth2Admin();

			OAuth2.viewApplicationInTable(
				applicationName = "OAuth Application",
				description = "Registering a new application");

			OAuth2.viewApplication(
				applicationName = "OAuth Application",
				callbackUri = "http://www.liferay.com",
				checkboxCheckList = "Authorization Code,Client Credentials,Refresh Token,Resource Owner Password Credentials",
				clientProfile = "Web Application",
				clientSecret = "${generatedClientSecret}",
				description = "Registering a new application",
				privacyPolicyURL = "http://www.liferay.com",
				websiteURL = "http://www.liferay.com");
		}
	}

}