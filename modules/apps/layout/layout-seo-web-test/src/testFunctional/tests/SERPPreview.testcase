@component-name = "portal-collaboration"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Test Page");
		}
	}

	@description = "This test ensures that a SERP preview is shown correctly based on the meta tags."
	@priority = "5"
	@refactordone
	test CanViewPreview {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Guest",
			layoutName = "Test Page",
			portlet = "SEO",
			siteURLKey = "guest");

		SERPPreview.viewPreviewDefault();

		SERPPreview.addGeneralSettings(
			description = "Description",
			htmlTitle = "Page HTML Title");

		Page.viewPreview(
			description = "Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = "${portalURL}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Page.viewPreview(
			description = "Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = "${portalURL}");
	}

	@description = "This test ensures that a SERP preview is refreshed when switching translations."
	@priority = "4"
	@refactordone
	test CanViewPreviewWhenSwitchingTranslations {
		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Guest",
			layoutName = "Test Page",
			portlet = "SEO",
			siteURLKey = "guest");

		SERPPreview.addGeneralSettings(
			description = "Page Description",
			htmlTitle = "Page HTML Title");

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "zh-CN");

		SERPPreview.addGeneralSettings(
			description = "中文描述",
			htmlTitle = "中文标题");

		Page.viewPreview(
			description = "中文描述",
			htmlTitle = "中文标题 - ${siteName}",
			locale = "zh-CN",
			pageName = "Test Page",
			portalURL = "${portalURL}");

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "en-US");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = "${portalURL}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = "${portalURL}");

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "zh-CN");

		Page.viewPreview(
			description = "中文描述",
			htmlTitle = "中文标题 - ${siteName}",
			locale = "zh-CN",
			pageName = "Test Page",
			portalURL = "${portalURL}");
	}

	@description = "This test ensures that ellipses are shown in the preview when the text limit is reached."
	@priority = "5"
	@refactordone
	test CanViewPreviewWithLongInputs {
		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview");

		Navigator.openToGroupPagesPortlet(
			groupName = "Guest",
			layoutName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview",
			portlet = "SEO",
			siteURLKey = "guest");

		SERPPreview.addGeneralSettings(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web applications called social applications",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - ${siteName}",
			pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview",
			portalURL = "${portalURL}",
			truncatedHtmlTitle = "true",
			truncatedURL = "true");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - ${siteName}",
			pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview",
			portalURL = "${portalURL}",
			truncatedHtmlTitle = "true",
			truncatedURL = "true");
	}

	@description = "This test ensures that a user can preview SEO tags with different languages."
	@priority = "5"
	@refactordone
	test CanViewTranslatedLanguages {
		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page",
			portlet = "SEO",
			siteURLKey = "test-site-name");

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ar-SA");

		SERPPreview.addGeneralSettings(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار - Test Site Name - ${siteName}",
			locale = "ar-SA",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.clickSave();

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ca-ES");

		SERPPreview.addGeneralSettings(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba");

		Page.viewPreview(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba - Test Site Name - ${siteName}",
			locale = "ca-ES",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.clickSave();

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ar-SA");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار - Test Site Name - ${siteName}",
			locale = "ar-SA",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ca-ES");

		Page.viewPreview(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba - Test Site Name - ${siteName}",
			locale = "ca-ES",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

}