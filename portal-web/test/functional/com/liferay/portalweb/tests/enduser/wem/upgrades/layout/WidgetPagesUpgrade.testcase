@component-name = "portal-upgrades"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Site Pages Administration,Upgrades WEM";
	property testray.main.component.name = "Upgrades WEM";

	setUp {
		SignIn.signIn();

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation(value1 = "${portalURL}/web/guest?SM_USER=test@liferay.com");

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LPS-75561."
	@priority = "5"
	test AddWidgetToPageAfterUpgrade625 {
		property data.archive.type = "data-archive-pages-administration";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "6.2.5";

		Navigator.openURL();

		Portlet.addPG(portletName = "Web Content Display");

		AssertTextNotPresent(value1 = "There was an unexpected error. Please refresh the current page.");
	}

	@description = "This is a use case for LPS-75561."
	@priority = "5"
	test AddWidgetToPageAfterUpgrade621015 {
		property data.archive.type = "data-archive-pages-administration";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "6.2.10.15";

		Navigator.openURL();

		Portlet.addPG(portletName = "Web Content Display");

		AssertTextNotPresent(value1 = "There was an unexpected error. Please refresh the current page.");
	}

	@description = "This is a use case for LPS-75561."
	@priority = "5"
	test AddWidgetToPageAfterUpgrade621021 {
		property data.archive.type = "data-archive-pages-administration";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "6.2.10.21";

		Navigator.openURL();

		Portlet.addPG(portletName = "Web Content Display");

		AssertTextNotPresent(value1 = "There was an unexpected error. Please refresh the current page.");
	}

}