definition {

	macro configureAnonymousPostingCP {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if ("${anonymousPostingEnabled}" == "true") {
			Check(locator1 = "MessageBoardsAdminConfiguration#GENERAL_ALLOW_ANONYMOUS_POSTING_CHECKBOX");
		}
		else if ("${anonymousPostingEnabled}" == "false") {
			Uncheck(locator1 = "MessageBoardsAdminConfiguration#GENERAL_ALLOW_ANONYMOUS_POSTING_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro configureGeneralCP {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if ("${threadAsQuestionByDefaultEnabled}" == "true") {
			Check(locator1 = "MessageBoardsAdminConfiguration#GENERAL_THREAD_AS_QUESTION_BY_DEFAULT_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro configureMessageAddedEmail {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_MESSAGE_ADDED_EMAIL",
			value1 = "Message Added Email");

		if ("${messageAddedEmailEnabled}" == "false") {
			Uncheck(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_ADDED_EMAIL_ENABLED_CHECKBOX");
		}
		else {
			AssertChecked(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_ADDED_EMAIL_ENABLED_CHECKBOX");
		}

		if (isSet(bodyContent)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${bodyContent}");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");
		}

		PortletEntry.save();
	}

	macro configureMessageEmailFromCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Message Boards");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_EMAIL_FROM",
			value1 = "Email From");

		if (isSet(emailFromName)) {
			Type(
				locator1 = "TextInput#EMAIL_FROM_NAME",
				value1 = "${emailFromName}");
		}

		if (isSet(emailFromAddress)) {
			Type(
				locator1 = "TextInput#EMAIL_FROM_ADDRESS",
				value1 = "${emailFromAddress}");
		}

		PortletEntry.save();
	}

	macro configureMessageFormat {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Select(
			locator1 = "MessageBoardsThread#THREAD_FORMAT_SELECT",
			value1 = "${messageFormat}");

		AssertSelectedLabel(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "messageFormat",
			value1 = "${messageFormat}");

		PortletEntry.save();
	}

	macro configureMessageUpdatedEmail {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_MESSAGE_UPDATED_EMAIL",
			value1 = "Message Updated Email");

		if ("${messageUpdatedEmailEnabled}" == "false") {
			Uncheck(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_UPDATED_EMAIL_ENABLED_CHECKBOX");
		}
		else {
			AssertChecked(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_UPDATED_EMAIL_ENABLED_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro gotoInlinePermissionsPG {
		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		WaitForLiferayEvent.initializeLiferayEventLog();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro gotoRecentPostsPG {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_RECENT_POSTS",
			value1 = "Recent Posts");
	}

	macro subscribePG {
		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownConfigurationEmailCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Message Boards");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_MESSAGE_ADDED_EMAIL",
			value1 = "Message Added Email");

		Check(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_ADDED_EMAIL_ENABLED_CHECKBOX");

		PortletEntry.save();

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_MESSAGE_UPDATED_EMAIL",
			value1 = "Message Updated Email");

		Check(locator1 = "MessageBoardsAdminConfiguration#MESSAGE_UPDATED_EMAIL_ENABLED_CHECKBOX");

		PortletEntry.save();
	}

	macro tearDownConfigurationGeneralCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Message Boards");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Check(locator1 = "MessageBoardsAdminConfiguration#GENERAL_ALLOW_ANONYMOUS_POSTING_CHECKBOX");

		PortletEntry.save();
	}

	macro viewAnonymousPostingConfigurationCP {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if ("${anonymousPostingEnabled}" == "true") {
			AssertChecked(locator1 = "MessageBoardsAdminConfiguration#GENERAL_ALLOW_ANONYMOUS_POSTING_CHECKBOX");
		}
		else if ("${anonymousPostingEnabled}" == "false") {
			AssertNotChecked(locator1 = "MessageBoardsAdminConfiguration#GENERAL_ALLOW_ANONYMOUS_POSTING_CHECKBOX");
		}
	}

	macro viewBannedUserCP {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_BANNED_USERS",
			value1 = "Banned Users");

		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "MessageBoardsBannedUsers#BANNED_USERS_TABLE_BANNED_USER",
			value1 = "${userScreenName}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsBannedUsers#BANNED_USERS_TABLE_BANNED_BY",
			value1 = "Test Test");

		if (isSet(disableAutoExpire)) {
			var unbanDate = DateUtil.getFormattedCurrentDate("M/d/yy");

			echo("## * unbanDate: ${unbanDate}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsBannedUsers#BANNED_USERS_TABLE_UNBAN_DATE",
				value1 = "${unbanDate}");

			Pause(locator1 = "60000");

			MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

			AssertClick(
				locator1 = "MessageBoards#NAVIGATION_BANNED_USERS",
				value1 = "Banned Users");
		}
		else {
			AssertVisible(locator1 = "MessageBoardsBannedUsers#BANNED_USERS_TABLE_UNBAN_DATE");
		}

		LexiconEntry.openEntryMenu(rowEntry = "${userScreenName}");

		MenuItem.viewPresent(menuItem = "Unban This User");

		AssertClick(
			locator1 = "MessageBoardsBannedUsers#BANNED_USERS_TABLE_BANNED_USER",
			value1 = "${userScreenName}");

		ProductMenuHelper.openProductMenu();

		AssertTextEquals.assertPartialText(
			key_siteName = "${userScreenName}",
			locator1 = "ProductMenu#SITE_NAME",
			value1 = "${userScreenName}");
	}

	macro viewDefaultEmailFromCP {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertClick(
			locator1 = "MessageBoardsAdminConfiguration#SETUP_NAVIGATION_EMAIL_FROM",
			value1 = "Email From");

		AssertTextEquals(
			locator1 = "TextInput#EMAIL_FROM_NAME",
			value1 = "[$MESSAGE_USER_NAME$]");

		AssertTextEquals(
			locator1 = "TextInput#EMAIL_FROM_ADDRESS",
			value1 = "test@liferay.com");

		if (isSet(emailFromAddress)) {
			Type(
				locator1 = "TextInput#EMAIL_FROM_ADDRESS",
				value1 = "${emailFromAddress}");

			PortletEntry.save();
		}
	}

	macro viewNoPermissionCP {
		var key_portletTitle = "Message Boards";

		AssertTextEquals(
			locator1 = "Home#SITE_ADMINISTRATION_PORTLET_TITLE",
			value1 = "Message Boards");

		AssertElementPresent(locator1 = "NavBar#CONTAINER");

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories.");
	}

	macro viewNoSearchResultSubjectPG {
		var key_threadSubject = "${threadSubject}";

		AssertElementNotPresent(locator1 = "MessageBoardsSearch#SEARCH_RESULTS_ENTRY_TITLE");
	}

	macro viewSearchResultPG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD",
			value1 = "${threadSubject}");

		if (isSet(mbThreadAttachment)) {
			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD",
				value1 = "${threadSubject}");

			AssertVisible(locator1 = "Link#MESSAGE_BOARDS_ATTACHMENT");
		}
	}

}